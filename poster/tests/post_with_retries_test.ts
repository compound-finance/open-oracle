import {postWithRetries, signAndSend} from '../src/postWithRetries';
const Web3 = require('web3');
require('sepia');

describe('posting', () => {
  test('signs and sends', async () => {
    const provider = "http://nothing:3000";
    const web3 = await new Web3(provider);

    web3.eth._currentProvider.send = async function (method, parameters) {
      console.log(method)
      switch ( method ) {
        case "eth_chainId":
          return "0x" + Number(3).toString(16) 
        case "eth_getTransactionCount":
          return "5"
        case "eth_sendRawTransaction":
          return {
            "id":1,
            "jsonrpc": "2.0",
            "result": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"
          }
        case "eth_getTransactionReceipt":
          return {"blockHash": "0x39c8d35121d038a7a52ac02d5fc838677acc6eff928f6b8cb62aeaf3c8ccd9bf", "blockNumber": 6, "contractAddress": null, "cumulativeGasUsed": 29528, "from": "0x2aCEB21fA094452fa808Eb052625269619B91fe6", "gas": undefined, "gasUsed": 29528, "logs": [], "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000", "nonce": undefined, "r": "0x1db007dd03ac9859cd81862a86541e9179d91a135dcc87fbfc3aa35e9ff6b8bf", "s": "0x33a344a192164c1a215129936e564a9176671c3cb3003a45bce041b51c19d290", "status": true, "to": "0x4fe3dd76d873CAF6Cbf56E442B2C808D3984df1D", "transactionHash": "0x10786cf089353350348236ae4fe26c71a834adbdf37cf77e75042255c5f2675c", "transactionIndex": 0, "v": "0x2a"}
        case "eth_getBlockByNumber":
          return 8
      }
    }

    let senderKey = "0x1e4660165383f3e2d3fb9988f5293be13df00136c1fae00e5b0d5f267e13c95e"

    // sends the transaction
    const data = "0xa59d56ad000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020177ee777e72b8c042e05ef41d1db0f17f1fcb0e8150b37cfad6993e4373bdf1000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000006004a78a7b3013f6939da19eac6fd1ad5c5a20c41bcc5d828557442aad6f07598d029ae684620bec13e13d018cba0da5096626e83cfd4d5356d808d7437a0a5076000000000000000000000000000000000000000000000000000000000000001c"

    let receipt = await signAndSend({
      data: data,
      to: "0x4fe3dd76d873CAF6Cbf56E442B2C808D3984df1D",
      gasPrice: 10_000_000,
      gas: 100_000
    }, senderKey, web3);

    expect(receipt).toEqual([]);
    });
});
