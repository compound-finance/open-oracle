{
  "contractName": "OpenOracleData",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "message",
          "type": "bytes"
        },
        {
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "source",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"message\",\"type\":\"bytes\"},{\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"source\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Compound Labs, Inc.\\r\",\"methods\":{\"source(bytes,bytes)\":{\"details\":\"Comparing to a claimed address would add nothing,\\r as the caller could simply perform the recover and claim that address.\\r\",\"params\":{\"message\":\"The data that was presumably signed\\r\",\"signature\":\"The fingerprint of the data + private key\\r\"},\"return\":\"The source address which signed the message, presumably\\r\"}},\"title\":\"The Open Oracle Data Base Contract\\r\"},\"userdoc\":{\"methods\":{\"source(bytes,bytes)\":{\"notice\":\"Recovers the source address which signed a message\\r\"}}}},\"settings\":{\"compilationTarget\":{\"/C/company/code/open-oracle/contracts/OpenOracleData.sol\":\"OpenOracleData\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/company/code/open-oracle/contracts/OpenOracleData.sol\":{\"keccak256\":\"0x50a9175bf520a60d9e97f6b680c6d2e5d88ba9326a351a7660794269cf25b95a\",\"urls\":[\"bzzr://3e1df4e6b857e85f250a1b9e4a521a869df96831e421e2248dcff06f5079e1cb\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061047e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063482a619314610030575b600080fd5b61004a600480360361004591908101906101da565b610060565b60405161005791906102f0565b60405180910390f35b6000806000808480602001905161007a919081019061018b565b9250925092506000868051906020012060405160200161009a91906102ca565b604051602081830303815290604052805190602001209050600181838686604051600081526020016040526040516100d5949392919061030b565b6020604051602081039080840390855afa1580156100f7573d6000803e3d6000fd5b5050506020604051035194505050505092915050565b60008151905061011c81610416565b92915050565b600082601f83011261013357600080fd5b81356101466101418261037d565b610350565b9150808252602083016020830185838301111561016257600080fd5b61016d8382846103fd565b50505092915050565b6000815190506101858161042d565b92915050565b6000806000606084860312156101a057600080fd5b60006101ae8682870161010d565b93505060206101bf8682870161010d565b92505060406101d086828701610176565b9150509250925092565b600080604083850312156101ed57600080fd5b600083013567ffffffffffffffff81111561020757600080fd5b61021385828601610122565b925050602083013567ffffffffffffffff81111561023057600080fd5b61023c85828601610122565b9150509250929050565b61024f816103b4565b82525050565b61025e816103c6565b82525050565b610275610270826103c6565b61040c565b82525050565b6000610288601c836103a9565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b6102c4816103f0565b82525050565b60006102d58261027b565b91506102e18284610264565b60208201915081905092915050565b60006020820190506103056000830184610246565b92915050565b60006080820190506103206000830187610255565b61032d60208301866102bb565b61033a6040830185610255565b6103476060830184610255565b95945050505050565b6000604051905081810181811067ffffffffffffffff8211171561037357600080fd5b8060405250919050565b600067ffffffffffffffff82111561039457600080fd5b601f19601f8301169050602081019050919050565b600081905092915050565b60006103bf826103d0565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b6000819050919050565b61041f816103c6565b811461042a57600080fd5b50565b610436816103f0565b811461044157600080fd5b5056fea265627a7a72305820ea78a9ef99d46bebde50b78f7cd43e49ad85aba1fdc5a9f53497adeaefd0c18a6c6578706572696d656e74616cf50037",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063482a619314610030575b600080fd5b61004a600480360361004591908101906101da565b610060565b60405161005791906102f0565b60405180910390f35b6000806000808480602001905161007a919081019061018b565b9250925092506000868051906020012060405160200161009a91906102ca565b604051602081830303815290604052805190602001209050600181838686604051600081526020016040526040516100d5949392919061030b565b6020604051602081039080840390855afa1580156100f7573d6000803e3d6000fd5b5050506020604051035194505050505092915050565b60008151905061011c81610416565b92915050565b600082601f83011261013357600080fd5b81356101466101418261037d565b610350565b9150808252602083016020830185838301111561016257600080fd5b61016d8382846103fd565b50505092915050565b6000815190506101858161042d565b92915050565b6000806000606084860312156101a057600080fd5b60006101ae8682870161010d565b93505060206101bf8682870161010d565b92505060406101d086828701610176565b9150509250925092565b600080604083850312156101ed57600080fd5b600083013567ffffffffffffffff81111561020757600080fd5b61021385828601610122565b925050602083013567ffffffffffffffff81111561023057600080fd5b61023c85828601610122565b9150509250929050565b61024f816103b4565b82525050565b61025e816103c6565b82525050565b610275610270826103c6565b61040c565b82525050565b6000610288601c836103a9565b91507f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000830152601c82019050919050565b6102c4816103f0565b82525050565b60006102d58261027b565b91506102e18284610264565b60208201915081905092915050565b60006020820190506103056000830184610246565b92915050565b60006080820190506103206000830187610255565b61032d60208301866102bb565b61033a6040830185610255565b6103476060830184610255565b95945050505050565b6000604051905081810181811067ffffffffffffffff8211171561037357600080fd5b8060405250919050565b600067ffffffffffffffff82111561039457600080fd5b601f19601f8301169050602081019050919050565b600081905092915050565b60006103bf826103d0565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060ff82169050919050565b82818337600083830152505050565b6000819050919050565b61041f816103c6565b811461042a57600080fd5b50565b610436816103f0565b811461044157600080fd5b5056fea265627a7a72305820ea78a9ef99d46bebde50b78f7cd43e49ad85aba1fdc5a9f53497adeaefd0c18a6c6578706572696d656e74616cf50037",
  "sourceMap": "150:1860:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;150:1860:3;;;;;;;",
  "deployedSourceMap": "150:1860:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;150:1860:3;;;;;;;;;;;;;;;;;;;1663:344;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1746:7;1767:9;1778;1789:7;1811:9;1800:48;;;;;;;;;;;;;;1766:82;;;;;;1859:12;1947:7;1937:18;;;;;;1884:72;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1884:72:3;;;1874:83;;;;;;1859:98;;1975:24;1985:4;1991:1;1994;1997;1975:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1975:24:3;;;;;;;;1968:31;;;;;;1663:344;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;147:440;;248:3;241:4;233:6;229:17;225:27;215:2;;266:1;263;256:12;215:2;303:6;290:20;325:64;340:48;381:6;340:48;;;325:64;;;316:73;;409:6;402:5;395:21;445:4;437:6;433:17;478:4;471:5;467:16;513:3;504:6;499:3;495:16;492:25;489:2;;;530:1;527;520:12;489:2;540:41;574:6;569:3;564;540:41;;;208:379;;;;;;;;595:130;;677:6;671:13;662:22;;689:31;714:5;689:31;;;656:69;;;;;732:531;;;;879:2;867:9;858:7;854:23;850:32;847:2;;;895:1;892;885:12;847:2;930:1;947:64;1003:7;994:6;983:9;979:22;947:64;;;937:74;;909:108;1048:2;1066:64;1122:7;1113:6;1102:9;1098:22;1066:64;;;1056:74;;1027:109;1167:2;1185:62;1239:7;1230:6;1219:9;1215:22;1185:62;;;1175:72;;1146:107;841:422;;;;;;1270:574;;;1409:2;1397:9;1388:7;1384:23;1380:32;1377:2;;;1425:1;1422;1415:12;1377:2;1488:1;1477:9;1473:17;1460:31;1511:18;1503:6;1500:30;1497:2;;;1543:1;1540;1533:12;1497:2;1563:62;1617:7;1608:6;1597:9;1593:22;1563:62;;;1553:72;;1439:192;1690:2;1679:9;1675:18;1662:32;1714:18;1706:6;1703:30;1700:2;;;1746:1;1743;1736:12;1700:2;1766:62;1820:7;1811:6;1800:9;1796:22;1766:62;;;1756:72;;1641:193;1371:473;;;;;;1851:113;1934:24;1952:5;1934:24;;;1929:3;1922:37;1916:48;;;1971:113;2054:24;2072:5;2054:24;;;2049:3;2042:37;2036:48;;;2091:152;2192:45;2212:24;2230:5;2212:24;;;2192:45;;;2187:3;2180:58;2174:69;;;2251:400;;2429:85;2511:2;2506:3;2429:85;;;2422:92;;2547:66;2543:1;2538:3;2534:11;2527:87;2642:2;2637:3;2633:12;2626:19;;2415:236;;;;2659:107;2738:22;2754:5;2738:22;;;2733:3;2726:35;2720:46;;;2773:511;;3000:148;3144:3;3000:148;;;2993:155;;3159:75;3230:3;3221:6;3159:75;;;3256:2;3251:3;3247:12;3240:19;;3276:3;3269:10;;2981:303;;;;;3291:213;;3409:2;3398:9;3394:18;3386:26;;3423:71;3491:1;3480:9;3476:17;3467:6;3423:71;;;3380:124;;;;;3511:539;;3709:3;3698:9;3694:19;3686:27;;3724:71;3792:1;3781:9;3777:17;3768:6;3724:71;;;3806:68;3870:2;3859:9;3855:18;3846:6;3806:68;;;3885:72;3953:2;3942:9;3938:18;3929:6;3885:72;;;3968;4036:2;4025:9;4021:18;4012:6;3968:72;;;3680:370;;;;;;;;4057:256;;4119:2;4113:9;4103:19;;4157:4;4149:6;4145:17;4256:6;4244:10;4241:22;4220:18;4208:10;4205:34;4202:62;4199:2;;;4277:1;4274;4267:12;4199:2;4297:10;4293:2;4286:22;4097:216;;;;;4320:258;;4463:18;4455:6;4452:30;4449:2;;;4495:1;4492;4485:12;4449:2;4539:4;4535:9;4528:4;4520:6;4516:17;4512:33;4504:41;;4568:4;4562;4558:15;4550:23;;4386:192;;;;4586:145;;4722:3;4707:18;;4700:31;;;;;4739:91;;4801:24;4819:5;4801:24;;;4790:35;;4784:46;;;;4837:72;;4899:5;4888:16;;4882:27;;;;4916:121;;4989:42;4982:5;4978:54;4967:65;;4961:76;;;;5044:81;;5115:4;5108:5;5104:16;5093:27;;5087:38;;;;5133:145;5214:6;5209:3;5204;5191:30;5270:1;5261:6;5256:3;5252:16;5245:27;5184:94;;;;5286:74;;5350:5;5339:16;;5333:27;;;;5367:117;5436:24;5454:5;5436:24;;;5429:5;5426:35;5416:2;;5475:1;5472;5465:12;5416:2;5410:74;;5491:113;5558:22;5574:5;5558:22;;;5551:5;5548:33;5538:2;;5595:1;5592;5585:12;5538:2;5532:72;",
  "source": "pragma solidity ^0.5.0;\r\npragma experimental ABIEncoderV2;\r\n\r\n/**\r\n * @title The Open Oracle Data Base Contract\r\n * @author Compound Labs, Inc.\r\n */\r\ncontract OpenOracleData {\r\n    /**\r\n     * @notice The event emitted when a source writes to its storage\r\n     */\r\n    //event Write(address indexed source, <Key> indexed key, string kind, uint64 timestamp, <Value> value);\r\n\r\n    /**\r\n     * @notice Write a bunch of signed datum to the authenticated storage mapping\r\n     * @param message The payload containing the timestamp, and (key, value) pairs\r\n     * @param signature The cryptographic signature of the message payload, authorizing the source to write\r\n     * @return The keys that were written\r\n     */\r\n    //function put(bytes calldata message, bytes calldata signature) external returns (<Key> memory);\r\n\r\n    /**\r\n     * @notice Read a single key with a pre-defined type signature from an authenticated source\r\n     * @param source The verifiable author of the data\r\n     * @param key The selector for the value to return\r\n     * @return The claimed Unix timestamp for the data and the encoded value (defaults to (0, 0x))\r\n     */\r\n    //function get(address source, <Key> key) external view returns (uint, <Value>);\r\n\r\n    /**\r\n     * @notice Recovers the source address which signed a message\r\n     * @dev Comparing to a claimed address would add nothing,\r\n     *  as the caller could simply perform the recover and claim that address.\r\n     * @param message The data that was presumably signed\r\n     * @param signature The fingerprint of the data + private key\r\n     * @return The source address which signed the message, presumably\r\n     */\r\n    function source(bytes memory message, bytes memory signature) public pure returns (address) {\r\n        (bytes32 r, bytes32 s, uint8 v) = abi.decode(signature, (bytes32, bytes32, uint8));\r\n        bytes32 hash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", keccak256(message)));\r\n        return ecrecover(hash, v, r, s);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\company\\code\\open-oracle\\contracts\\OpenOracleData.sol",
  "ast": {
    "absolutePath": "/C/company/code/open-oracle/contracts/OpenOracleData.sol",
    "exportedSymbols": {
      "OpenOracleData": [
        781
      ]
    },
    "id": 782,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 735,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "id": 736,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title The Open Oracle Data Base Contract\r\n@author Compound Labs, Inc.\r",
        "fullyImplemented": true,
        "id": 781,
        "linearizedBaseContracts": [
          781
        ],
        "name": "OpenOracleData",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "1755:252:3",
              "statements": [
                {
                  "assignments": [
                    746,
                    748,
                    750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 746,
                      "name": "r",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "1767:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 745,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1767:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 748,
                      "name": "s",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "1778:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 747,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1778:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 750,
                      "name": "v",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "1789:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 749,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1789:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 759,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 753,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "1811:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "id": 754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1823:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          {
                            "argumentTypes": null,
                            "id": 755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1832:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          {
                            "argumentTypes": null,
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1841:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          }
                        ],
                        "id": 757,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1822:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$_t_type$_t_uint8_$_$",
                          "typeString": "tuple(type(bytes32),type(bytes32),type(uint8))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$_t_type$_t_uint8_$_$",
                          "typeString": "tuple(type(bytes32),type(bytes32),type(uint8))"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "1800:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1800:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                      "typeString": "tuple(bytes32,bytes32,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1766:82:3"
                },
                {
                  "assignments": [
                    761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 761,
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "1859:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 760,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1859:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 771,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1901:34:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 767,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 738,
                                "src": "1947:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 766,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "1937:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1937:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 763,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1203,
                            "src": "1884:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1884:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1884:72:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 762,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1210,
                      "src": "1874:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:83:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1859:98:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 773,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "1985:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "1991:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "1994:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 776,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "1997:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 772,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1208,
                      "src": "1975:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 744,
                  "id": 778,
                  "nodeType": "Return",
                  "src": "1968:31:3"
                }
              ]
            },
            "documentation": "@notice Recovers the source address which signed a message\r\n@dev Comparing to a claimed address would add nothing,\r\n as the caller could simply perform the recover and claim that address.\r\n@param message The data that was presumably signed\r\n@param signature The fingerprint of the data + private key\r\n@return The source address which signed the message, presumably\r",
            "id": 780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "source",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "1679:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "1701:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1701:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1678:46:3"
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 743,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "1746:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1745:9:3"
            },
            "scope": 781,
            "src": "1663:344:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 782,
        "src": "150:1860:3"
      }
    ],
    "src": "0:2012:3"
  },
  "legacyAST": {
    "absolutePath": "/C/company/code/open-oracle/contracts/OpenOracleData.sol",
    "exportedSymbols": {
      "OpenOracleData": [
        781
      ]
    },
    "id": 782,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 735,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "id": 736,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:3"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title The Open Oracle Data Base Contract\r\n@author Compound Labs, Inc.\r",
        "fullyImplemented": true,
        "id": 781,
        "linearizedBaseContracts": [
          781
        ],
        "name": "OpenOracleData",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 779,
              "nodeType": "Block",
              "src": "1755:252:3",
              "statements": [
                {
                  "assignments": [
                    746,
                    748,
                    750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 746,
                      "name": "r",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "1767:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 745,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1767:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 748,
                      "name": "s",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "1778:9:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 747,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1778:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 750,
                      "name": "v",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "1789:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 749,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "1789:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 759,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 753,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 740,
                        "src": "1811:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "id": 754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1823:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          {
                            "argumentTypes": null,
                            "id": 755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1832:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": "bytes32"
                          },
                          {
                            "argumentTypes": null,
                            "id": 756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1841:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          }
                        ],
                        "id": 757,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1822:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$_t_type$_t_uint8_$_$",
                          "typeString": "tuple(type(bytes32),type(bytes32),type(uint8))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_bytes32_$_$_t_type$_t_bytes32_$_$_t_type$_t_uint8_$_$",
                          "typeString": "tuple(type(bytes32),type(bytes32),type(uint8))"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 751,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1203,
                        "src": "1800:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1800:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$_t_uint8_$",
                      "typeString": "tuple(bytes32,bytes32,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1766:82:3"
                },
                {
                  "assignments": [
                    761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 761,
                      "name": "hash",
                      "nodeType": "VariableDeclaration",
                      "scope": 779,
                      "src": "1859:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 760,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1859:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 771,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1901:34:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                            },
                            "value": "\u0019Ethereum Signed Message:\n32"
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 767,
                                "name": "message",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 738,
                                "src": "1947:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 766,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1210,
                              "src": "1937:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1937:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                              "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 763,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1203,
                            "src": "1884:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1884:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1884:72:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 762,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1210,
                      "src": "1874:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:83:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1859:98:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 773,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 761,
                        "src": "1985:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 774,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "1991:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 775,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 746,
                        "src": "1994:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 776,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "1997:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 772,
                      "name": "ecrecover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1208,
                      "src": "1975:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 744,
                  "id": 778,
                  "nodeType": "Return",
                  "src": "1968:31:3"
                }
              ]
            },
            "documentation": "@notice Recovers the source address which signed a message\r\n@dev Comparing to a claimed address would add nothing,\r\n as the caller could simply perform the recover and claim that address.\r\n@param message The data that was presumably signed\r\n@param signature The fingerprint of the data + private key\r\n@return The source address which signed the message, presumably\r",
            "id": 780,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "source",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "1679:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 740,
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "1701:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1701:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1678:46:3"
            },
            "returnParameters": {
              "id": 744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 743,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 780,
                  "src": "1746:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1745:9:3"
            },
            "scope": 781,
            "src": "1663:344:3",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 782,
        "src": "150:1860:3"
      }
    ],
    "src": "0:2012:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-03T20:10:33.108Z",
  "devdoc": {
    "author": "Compound Labs, Inc.\r",
    "methods": {
      "source(bytes,bytes)": {
        "details": "Comparing to a claimed address would add nothing,\r as the caller could simply perform the recover and claim that address.\r",
        "params": {
          "message": "The data that was presumably signed\r",
          "signature": "The fingerprint of the data + private key\r"
        },
        "return": "The source address which signed the message, presumably\r"
      }
    },
    "title": "The Open Oracle Data Base Contract\r"
  },
  "userdoc": {
    "methods": {
      "source(bytes,bytes)": {
        "notice": "Recovers the source address which signed a message\r"
      }
    }
  }
}