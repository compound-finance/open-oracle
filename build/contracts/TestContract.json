{
  "contractName": "TestContract",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getTellorValues",
      "outputs": [
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_didGet",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCurrentValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "disputeOptimisticValue",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getNumberOfValuesPerTimestamp",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "isValue",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "disputedValues",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "endDateTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startValue",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        }
      ],
      "name": "getCurrentValue",
      "outputs": [
        {
          "name": "ifRetrieve",
          "type": "bool"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestData",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_request",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "requestDataWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "requestIdsIncluded",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTimestamps",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputePeriod",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstVerifiedDataAfter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getNumberOfDisputedValues",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getFirstUndisputedValueAfter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getDisputedValueByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTip",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startDateTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "setValue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "isDisputed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractEnded",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getIsValue",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        }
      ],
      "name": "setUserContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRequestIds",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getDisputedValues",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputeFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "longWins",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getAnyDataAfter",
      "outputs": [
        {
          "name": "_ifRetrieve",
          "type": "bool"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_timestampRetrieved",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getRequestIdsIncluded",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "getMyValuesByTimestamp",
      "outputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_requestId",
          "type": "uint256"
        },
        {
          "name": "_tip",
          "type": "uint256"
        }
      ],
      "name": "addTipWithEther",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_userContract",
          "type": "address"
        },
        {
          "name": "_disputeFeeRequired",
          "type": "uint256"
        },
        {
          "name": "_disputePeriod",
          "type": "uint256"
        },
        {
          "name": "_requestIds",
          "type": "uint256[]"
        },
        {
          "name": "_granularity",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_svalue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_evalue",
          "type": "uint256"
        }
      ],
      "name": "ContractSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "NewValueSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "ValueDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "TellorValuePlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "testContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "settleContracts",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getTellorValues\",\"outputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_didGet\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"testContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"disputeOptimisticValue\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getNumberOfValuesPerTimestamp\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"endDateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startValue\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"}],\"name\":\"getCurrentValue\",\"outputs\":[{\"name\":\"ifRetrieve\",\"type\":\"bool\"},{\"name\":\"value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestData\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_request\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_granularity\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"requestDataWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"requestIdsIncluded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTimestamps\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputePeriod\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstVerifiedDataAfter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getNumberOfDisputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getFirstUndisputedValueAfter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getDisputedValueByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTip\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startDateTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"setValue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"isDisputed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"settleContracts\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"contractEnded\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getIsValue\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"}],\"name\":\"setUserContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRequestIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getDisputedValues\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"disputeFee\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"longWins\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getAnyDataAfter\",\"outputs\":[{\"name\":\"_ifRetrieve\",\"type\":\"bool\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_timestampRetrieved\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getRequestIdsIncluded\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"getMyValuesByTimestamp\",\"outputs\":[{\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_requestId\",\"type\":\"uint256\"},{\"name\":\"_tip\",\"type\":\"uint256\"}],\"name\":\"addTipWithEther\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_userContract\",\"type\":\"address\"},{\"name\":\"_disputeFeeRequired\",\"type\":\"uint256\"},{\"name\":\"_disputePeriod\",\"type\":\"uint256\"},{\"name\":\"_requestIds\",\"type\":\"uint256[]\"},{\"name\":\"_granularity\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_svalue\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_evalue\",\"type\":\"uint256\"}],\"name\":\"ContractSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"NewValueSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_disputer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"ValueDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"TellorValuePlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"_previousOwner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addTip(uint256,uint256)\":{\"details\":\"Allows the user to tip miners for the specified request using Tributes\\r\",\"params\":{\"_requestId\":\"to tip\\r\",\"_tip\":\"amount\\r\"}},\"addTipWithEther(uint256,uint256)\":{\"details\":\"Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes\\r at the price specified by the userContract owner.\\r\",\"params\":{\"_requestId\":\"to tip\\r\",\"_tip\":\"amount\\r\"}},\"constructor\":{\"details\":\"This constructor function is used to pass variables to the optimistic contract's constructor\\r and the function is blank\\r\",\"params\":{\"_disputeFeeRequired\":\"the fee to dispute the optimistic price(price sumbitted by known trusted party)\\r\",\"_disputePeriod\":\"is the time frame a value can be disputed after being imputed\\r\",\"_granularity\":\"is the amount of decimals desired on the requested value\\r\",\"_requestIds\":\"are the requests Id's on the Tellor System corresponding to the data types used on this contract.\\r It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor \\r System be sure to create some.\\r\",\"_userContract\":\"address for UserContract\\r\"}},\"disputeOptimisticValue(uint256)\":{\"details\":\"allows user to initiate dispute on the value of the specified timestamp\\r\",\"params\":{\"_timestamp\":\"is the timestamp for the value to be disputed\\r\"}},\"getAnyDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first value for the requestId after the specified timestamp\\r\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\\r\",\"_timestamp\":\"after which to search for first verified value\\r\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\\r\"},\"getCurrentValue()\":{\"details\":\"Getter function for latest value available\\r\",\"return\":\"latest value available\\r\"},\"getCurrentValue(uint256)\":{\"details\":\"Allows the user to get the latest value for the requestId specified\\r\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\\r\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp\\r\"},\"getDisputedValueByIndex(uint256)\":{\"details\":\"Getter function for the dispute value by index\\r\",\"return\":\"the value\\r\"},\"getDisputedValues()\":{\"details\":\"Getter function for all disputed values\\r\",\"return\":\"the array with all values under dispute\\r\"},\"getFirstUndisputedValueAfter(uint256)\":{\"details\":\"Get the first undisputed value after the timestamp specified. This function is used within the getTellorValues\\r but can be used on its own. \\r\",\"params\":{\"_timestamp\":\"to search the first undisputed value there after\\r\"}},\"getFirstVerifiedDataAfter(uint256,uint256)\":{\"details\":\"Allows the user to get the first verified value for the requestId after the specified timestamp\\r\",\"params\":{\"_requestId\":\"is the requestId to look up the value for\\r\",\"_timestamp\":\"after which to search for first verified value\\r\"},\"return\":\"bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after\\r which it searched for the first verified value\\r\"},\"getIsValue(uint256)\":{\"details\":\"Checks to if a value exists for the specifived timestamp\\r\",\"params\":{\"_timestamp\":\"to verify\\r\"},\"return\":\"ture if it exists\\r\"},\"getMyValuesByTimestamp(uint256)\":{\"details\":\"Getter function for the value based on the timestamp specified\\r\",\"params\":{\"_timestamp\":\"to retreive value from\\r\"}},\"getNumberOfDisputedValues()\":{\"details\":\"Getter function for the number of disputed values \\r\",\"return\":\"uint count of number of values for the spedified timestamp\\r\"},\"getNumberOfValuesPerTimestamp(uint256)\":{\"details\":\"Getter function for the number of RequestIds associated with a timestamp, based on the timestamp specified\\r\",\"params\":{\"_timestamp\":\"to retreive number of requestIds\\r\"},\"return\":\"uint count of number of values for the spedified timestamp\\r\"},\"getRequestIds()\":{\"details\":\"Getter function for the requests Ids' from Tellor associated with this price feed\\r\",\"return\":\"uint array of requests Ids'\\r\"},\"getRequestIdsIncluded(uint256)\":{\"details\":\"Getter function for the requests Ids' from Tellor associated with this price feed\\r at the specified timestamp. This only gets populated after a dispute is initiated and the \\r function getTellorValues is ran.\\r\",\"params\":{\"_timestamp\":\"to retreive the requestIds\\r\"},\"return\":\"uint array of requests Ids' included in the calcluation of the value\\r\"},\"getTellorValues(uint256)\":{\"details\":\"This function gets the Tellor requestIds values for the disputed timestamp. It averages the values on the \\r requestsIds and replaces the value set by the contract owner, centralized party.\\r\",\"params\":{\"_timestamp\":\"to get Tellor data from\\r\"},\"return\":\"uint of new value and true if it was able to get Tellor data\\r\"},\"getTimestamps()\":{\"details\":\"Getter function for the timestamps available\\r\",\"return\":\"uint array of timestamps available\\r\"},\"isDisputed(uint256)\":{\"details\":\"This checks if the value for the specified timestamp is under dispute \\r\",\"params\":{\"_timestamp\":\"to check if it is under dispute\\r\"},\"return\":\"true if it is under dispute\\r\"},\"requestData(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using Tributes\\r Allowing this prevents us from increasing spread too high (since if we set the price too hight\\r users will just go to an exchange and get tokens from there)\\r\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\\r\",\"_request\":\"string API being requested to be mined\\r\",\"_symbol\":\"is the short string symbol for the api request\\r\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners\\r mine the onDeckQueryHash, or the api with the highest payout pool\\r\"}},\"requestDataWithEther(string,string,uint256,uint256)\":{\"details\":\"Allows the user to submit a request for data to the oracle using ETH\\r\",\"params\":{\"_granularity\":\"is the number of decimals miners should include on the submitted value\\r\",\"_request\":\"string API being requested to be mined\\r\",\"_symbol\":\"is the short string symbol for the api request\\r\",\"_tip\":\"amount the requester is willing to pay to be get on queue. Miners\\r mine the onDeckQueryHash, or the api with the highest payout pool\\r\"}},\"setUserContract(address)\":{\"details\":\"allows owner to set the user contract address\\r\",\"params\":{\"_userContract\":\"address\\r\"}},\"setValue(uint256,uint256)\":{\"details\":\"allows contract owner, a centralized party to enter value\\r\",\"params\":{\"_timestamp\":\"is the timestamp for the value\\r\",\"_value\":\"is the value for the timestamp specified\\r\"}},\"settleContracts()\":{\"details\":\"testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\\r and the first undisputed value after the end time of the contract and settleling(payin off) it.\\r\"},\"testContract(uint256)\":{\"details\":\"creates a start(now) and end time(now + duration specified) for testing a contract start and end period\\r\",\"params\":{\"_duration\":\"in seconds\\r\"}},\"transferOwnership(address)\":{\"details\":\"allows owner to transfer ownership\\r\",\"params\":{\"_newOwner\":\"address\\r\"}},\"withdrawETH()\":{\"details\":\"Allows the contract owner(Tellor) to withdraw ETH from this contract\\r\"}},\"title\":\"Reader\\r This contracts is a pretend contract using Tellor that compares two time values\\r\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/company/code/open-oracle/contracts/Tellor/userFiles/TestContract.sol\":\"TestContract\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/company/code/open-oracle/contracts/Tellor/Tellor.sol\":{\"keccak256\":\"0xfa977c507558a2bd9b8f246309a8c7d7f0a8317bbab8eb1bbb0ee61f1a1d2232\",\"urls\":[\"bzzr://c1c9bec52f4a88090960b7370f4f3d3bf12b360728d97988f223a9490a9706c9\"]},\"/C/company/code/open-oracle/contracts/Tellor/TellorGetters.sol\":{\"keccak256\":\"0x28a89979339d4a64f83a4230626bdb83d740c6cf7159610acf75317dfd765f86\",\"urls\":[\"bzzr://0a1d4cfcfa9867eb670e5ff1ea73e25ee0b3117448ad98f1a355084fb2352103\"]},\"/C/company/code/open-oracle/contracts/Tellor/TellorMaster.sol\":{\"keccak256\":\"0xc83abfb6a62ee22d89b5419dbc144ca9a32a215746a737c28b15f9ad0ae414aa\",\"urls\":[\"bzzr://a39e517329a307cfa857edced9f0d287dcad3e5dc4c4ae0d749261863de91ad9\"]},\"/C/company/code/open-oracle/contracts/Tellor/libraries/SafeMath.sol\":{\"keccak256\":\"0x33d33c4333bbab4be87c97fe92662da443612c964e26c7d851e5288832afea4b\",\"urls\":[\"bzzr://96129153254df8e001dd2ef366b60835b8223195d3dbb67216c4570c47fe7c8d\"]},\"/C/company/code/open-oracle/contracts/Tellor/libraries/TellorDispute.sol\":{\"keccak256\":\"0xea017b20f05242f2acf05b4eabc52e996fffa77cc94f16d6d9ddae0c8ed18916\",\"urls\":[\"bzzr://fca8238d668e63dd5cb95d0199466fbd73b113894bb41817330d5bf82be479e5\"]},\"/C/company/code/open-oracle/contracts/Tellor/libraries/TellorGettersLibrary.sol\":{\"keccak256\":\"0x045a54c60f9b23eed4c9fc32b2d9f3f436348597408ac89d377e673c32227528\",\"urls\":[\"bzzr://9f967b209a90d61b5df82386005dd98a89e28ad5cafa6a1233ab5ebb773c44e5\"]},\"/C/company/code/open-oracle/contracts/Tellor/libraries/TellorLibrary.sol\":{\"keccak256\":\"0xab3cbd2f0553d57514443e33943e0ea2ae57f379c692e170fa73b89dca0fc604\",\"urls\":[\"bzzr://c0cf42a7f79340c40d18c633554755a6933320beacd42aa0f8235b21322d0131\"]},\"/C/company/code/open-oracle/contracts/Tellor/libraries/TellorStake.sol\":{\"keccak256\":\"0xcf2254187699dc31e79fa45bf752c05e4200f384044dcdf4e1822a294e40ddd0\",\"urls\":[\"bzzr://fa0c791a68578ef8e08e396a4f19524032bf62650025eee2c04fab37e8355908\"]},\"/C/company/code/open-oracle/contracts/Tellor/libraries/TellorStorage.sol\":{\"keccak256\":\"0x3517d1cecb0e449924d673e3fe3bd681bd151973f920d9c716f3baf6499826c7\",\"urls\":[\"bzzr://af89a9f762f67c69fba2cdc517311981663f72e3dd8b597c27aa0d47a4f8560b\"]},\"/C/company/code/open-oracle/contracts/Tellor/libraries/TellorTransfer.sol\":{\"keccak256\":\"0x3e0ac385295d9c9dd8f243a347365749cc7c095e6b491149164ec44df906d654\",\"urls\":[\"bzzr://87f52e6715b7c5668a45c095fe5a57bd9b77546bd3b952ae904fb4b9f0aff144\"]},\"/C/company/code/open-oracle/contracts/Tellor/libraries/Utilities.sol\":{\"keccak256\":\"0x6b555c31c790b578b7d10a26c8061c49f5435997716fad9f0cbe6b4b6c0bce03\",\"urls\":[\"bzzr://0526c21b5ac655d0a2782f81725ff30c60f76e4e83bcc9e5dd357d1b25c4869a\"]},\"/C/company/code/open-oracle/contracts/Tellor/userFiles/Optimistic.sol\":{\"keccak256\":\"0x8adf072fde87ba891a3333deae2787a1154b4d0140762e22986ca5309603b41d\",\"urls\":[\"bzzr://9ae2b2255cc89e3c3dea0f5730181fa831cd5f5f573d0ef71d4ab823d72e1634\"]},\"/C/company/code/open-oracle/contracts/Tellor/userFiles/TestContract.sol\":{\"keccak256\":\"0x35f306856fe448bfebb3ff69d35bdd024c37765de660df43a974d080d3badc7f\",\"urls\":[\"bzzr://4706a30537a5d73f2c3ccddc2347dbea42862f96ea6202083796a427df80270d\"]},\"/C/company/code/open-oracle/contracts/Tellor/userFiles/UserContract.sol\":{\"keccak256\":\"0x8c9224cd0c82e5f6d9dd8219dfa55b3ce45f4099bdf6c259dbef9c44d40dc8a7\",\"urls\":[\"bzzr://c604fb1397e889f42ea285ee0ccd720e3b83560b11a2a6931a330a36be62c0e9\"]},\"/C/company/code/open-oracle/contracts/Tellor/userFiles/UsingTellor.sol\":{\"keccak256\":\"0x15c36a92bfb7aaf2cd7890c71c04794588dada75637da4a445698347b8f5adcd\",\"urls\":[\"bzzr://31f9547f23047350af94406a3bd962508924e0f47046865ca5921e7d808e227c\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620029d9380380620029d9833981018060405260a08110156200003757600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080516401000000008111156200006e57600080fd5b828101905060208101848111156200008557600080fd5b8151856020820283011164010000000082111715620000a357600080fd5b505092919060200180519060200190929190505050848484848484806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505083600a8190555082600b819055508060098190555081600790805190602001906200016d9291906200017e565b5050505050505050505050620001f8565b828054828255906000526020600020908101928215620001bd579160200282015b82811115620001bc5782518255916020019190600101906200019f565b5b509050620001cc9190620001d0565b5090565b620001f591905b80821115620001f1576000816000905550600101620001d7565b5090565b90565b6127d180620002086000396000f3fe60806040526004361061023b5760003560e01c806371d8dd191161012e578063ac33a273116100ab578063dc7ebf0e1161006f578063dc7ebf0e14610d1d578063e086e5ec14610dad578063e631def714610dc4578063e723e3b514610e13578063f2fde38b14610e4b5761023b565b8063ac33a27314610b80578063b63f210a14610bec578063b9ce896b14610c58578063bad4d21e14610c83578063d269a83c14610cb25761023b565b806387105801116100f25780638710580114610a3f5780638da5cb5b14610a5657806391bf116f14610aad5780639a64f07014610adc578063a1206d4e14610b2f5761023b565b806371d8dd19146108e8578063752d49a114610937578063775f75df1461097c5780637b8d56e3146109a75780637ccc586e146109ec5761023b565b80633fcad964116101bc57806359abbfe41161018057806359abbfe41461075a5780635bf31d4d146107c65780635f059f3e146107f1578063681012e51461085c57806369949a86146108875761023b565b80633fcad964146104a45780633fff2816146105055780634482e6f3146105f4578063550921d4146106d6578063556f0dc71461072f5761023b565b80632aa0bc1f116102035780632aa0bc1f1461035957806336e9d632146103a857806337ae9e43146103fb5780633c9177cd1461044e5780633f35ff32146104795761023b565b8063062777ff146102405780630f76c1141461029a57806316e72abb146102c55780631714b0c5146102f0578063292b8cce1461032b575b600080fd5b34801561024c57600080fd5b506102796004803603602081101561026357600080fd5b8101908080359060200190929190505050610e9c565b60405180838152602001821515151581526020019250505060405180910390f35b3480156102a657600080fd5b506102af611453565b6040518082815260200191505060405180910390f35b3480156102d157600080fd5b506102da611493565b6040518082815260200191505060405180910390f35b3480156102fc57600080fd5b506103296004803603602081101561031357600080fd5b8101908080359060200190929190505050611499565b005b6103576004803603602081101561034157600080fd5b81019080803590602001909291905050506114c6565b005b34801561036557600080fd5b506103926004803603602081101561037c57600080fd5b81019080803590602001909291905050506115fe565b6040518082815260200191505060405180910390f35b3480156103b457600080fd5b506103e1600480360360208110156103cb57600080fd5b810190808035906020019092919050505061161e565b604051808215151515815260200191505060405180910390f35b34801561040757600080fd5b506104346004803603602081101561041e57600080fd5b810190808035906020019092919050505061163e565b604051808215151515815260200191505060405180910390f35b34801561045a57600080fd5b5061046361165e565b6040518082815260200191505060405180910390f35b34801561048557600080fd5b5061048e611664565b6040518082815260200191505060405180910390f35b3480156104b057600080fd5b506104dd600480360360208110156104c757600080fd5b810190808035906020019092919050505061166a565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561051157600080fd5b506105f26004803603608081101561052857600080fd5b810190808035906020019064010000000081111561054557600080fd5b82018360208201111561055757600080fd5b8035906020019184600183028401116401000000008311171561057957600080fd5b90919293919293908035906020019064010000000081111561059a57600080fd5b8201836020820111156105ac57600080fd5b803590602001918460018302840111640100000000831117156105ce57600080fd5b9091929391929390803590602001909291908035906020019092919050505061173d565b005b6106d46004803603608081101561060a57600080fd5b810190808035906020019064010000000081111561062757600080fd5b82018360208201111561063957600080fd5b8035906020019184600183028401116401000000008311171561065b57600080fd5b90919293919293908035906020019064010000000081111561067c57600080fd5b82018360208201111561068e57600080fd5b803590602001918460018302840111640100000000831117156106b057600080fd5b909192939192939080359060200190929190803590602001909291905050506119d0565b005b3480156106e257600080fd5b50610719600480360360408110156106f957600080fd5b810190808035906020019092919080359060200190929190505050611ad5565b6040518082815260200191505060405180910390f35b34801561073b57600080fd5b50610744611b03565b6040518082815260200191505060405180910390f35b34801561076657600080fd5b5061076f611b09565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107b2578082015181840152602081019050610797565b505050509050019250505060405180910390f35b3480156107d257600080fd5b506107db611b61565b6040518082815260200191505060405180910390f35b3480156107fd57600080fd5b506108346004803603604081101561081457600080fd5b810190808035906020019092919080359060200190929190505050611b67565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561086857600080fd5b50610871611c42565b6040518082815260200191505060405180910390f35b34801561089357600080fd5b506108c0600480360360208110156108aa57600080fd5b8101908080359060200190929190505050611c4f565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b3480156108f457600080fd5b506109216004803603602081101561090b57600080fd5b8101908080359060200190929190505050611d4b565b6040518082815260200191505060405180910390f35b34801561094357600080fd5b5061097a6004803603604081101561095a57600080fd5b810190808035906020019092919080359060200190929190505050611d6c565b005b34801561098857600080fd5b50610991611f89565b6040518082815260200191505060405180910390f35b3480156109b357600080fd5b506109ea600480360360408110156109ca57600080fd5b810190808035906020019092919080359060200190929190505050611f8f565b005b3480156109f857600080fd5b50610a2560048036036020811015610a0f57600080fd5b81019080803590602001909291905050506120ae565b604051808215151515815260200191505060405180910390f35b348015610a4b57600080fd5b50610a546120d8565b005b348015610a6257600080fd5b50610a6b6121ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ab957600080fd5b50610ac26121d3565b604051808215151515815260200191505060405180910390f35b348015610ae857600080fd5b50610b1560048036036020811015610aff57600080fd5b81019080803590602001909291905050506121e6565b604051808215151515815260200191505060405180910390f35b348015610b3b57600080fd5b50610b7e60048036036020811015610b5257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612210565b005b348015610b8c57600080fd5b50610b956122ad565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bd8578082015181840152602081019050610bbd565b505050509050019250505060405180910390f35b348015610bf857600080fd5b50610c01612305565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c44578082015181840152602081019050610c29565b505050509050019250505060405180910390f35b348015610c6457600080fd5b50610c6d61235d565b6040518082815260200191505060405180910390f35b348015610c8f57600080fd5b50610c98612363565b604051808215151515815260200191505060405180910390f35b348015610cbe57600080fd5b50610cf560048036036040811015610cd557600080fd5b810190808035906020019092919080359060200190929190505050612376565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b348015610d2957600080fd5b50610d5660048036036020811015610d4057600080fd5b8101908080359060200190929190505050612451565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d99578082015181840152602081019050610d7e565b505050509050019250505060405180910390f35b348015610db957600080fd5b50610dc26124bc565b005b348015610dd057600080fd5b50610dfd60048036036020811015610de757600080fd5b8101908080359060200190929190505050612598565b6040518082815260200191505060405180910390f35b610e4960048036036040811015610e2957600080fd5b8101908080359060200190929190803590602001909291905050506125b5565b005b348015610e5757600080fd5b50610e9a60048036036020811015610e6e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061264e565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610f0857600080fd5b505afa158015610f1c573d6000803e3d6000fd5b505050506040513d6020811015610f3257600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610fae57600080fd5b505afa158015610fc2573d6000803e3d6000fd5b505050506040513d6020811015610fd857600080fd5b810190808051906020019092919050505090506000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561106b57600080fd5b505afa15801561107f573d6000803e3d6000fd5b505050506040513d602081101561109557600080fd5b810190808051906020019092919050505090506000600190505b6007805490508111611449576110c58189611b67565b80955081995082985050505085156112f557600060095484816110e457fe5b06840390506000600160056000848152602001908152602001600020805490500160056000848152602001908152602001600020805490506003600085815260200190815260200160002054028a018161113a57fe5b0490508060036000848152602001908152602001600020819055507f11d6fa234e47ea0871bd2e6efeb4e7be326a7216c36990b799a61a501cfcf1c38282604051808381526020018281526020019250505060405180910390a160056000838152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550600015156002600084815260200190815260200160002060009054906101000a900460ff161515141561129357600682908060018154018082558091505090600182039060005260206000200160009091929091909150555060016002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c08a6040518082815260200191505060405180910390a26112ee565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514156112ed5760006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b505061143c565b6007805490508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561137857600080fd5b505afa15801561138c573d6000803e3d6000fd5b505050506040513d60208110156113a257600080fd5b8101908080519060200190929190505050111561143b578373ffffffffffffffffffffffffffffffffffffffff1663752d49a18260078054905085816113e457fe5b046040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561142257600080fd5b505af1158015611436573d6000803e3d6000fd5b505050505b5b80806001019150506110af565b5050505050915091565b6000806006805490501161146657600080fd5b61148e60066001600680549050038154811061147e57fe5b9060005260206000200154612598565b905090565b600f5481565b60095442816114a457fe5b064203600c819055508060095442816114b957fe5b06420301600d8190555050565b600a543410156114d557600080fd5b6002600082815260200190815260200160002060009054906101000a900460ff166114ff57600080fd5b600b548101600954428161150f57fe5b064203111561151d57600080fd5b60016004600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055507fb199747b7b98ffd681a09c542f7f62ba4972f6f5b7d791b6f8bba36862cbdd2b33826003600085815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b600060056000838152602001908152602001600020805490509050919050565b60026020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600d5481565b600e5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b1580156116e157600080fd5b505afa1580156116f5573d6000803e3d6000fd5b505050506040513d606081101561170b57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b1580156117a657600080fd5b505afa1580156117ba573d6000803e3d6000fd5b505050506040513d60208110156117d057600080fd5b8101908080519060200190929190505050905060008211156118ec578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156118a757600080fd5b505af11580156118bb573d6000803e3d6000fd5b505050506040513d60208110156118d157600080fd5b81019080805190602001909291905050506118eb57600080fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff28168888888888886040518763ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b1580156119af57600080fd5b505af11580156119c3573d6000803e3d6000fd5b5050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634482e6f3348888888888886040518863ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050985050505050505050506000604051808303818588803b158015611ab457600080fd5b505af1158015611ac8573d6000803e3d6000fd5b5050505050505050505050565b60056020528160005260406000208181548110611aee57fe5b90600052602060002001600091509150505481565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015611b5757602002820191906000526020600020905b815481526020019060010190808311611b43575b5050505050905090565b600b5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015611be657600080fd5b505afa158015611bfa573d6000803e3d6000fd5b505050506040513d6060811015611c1057600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000600880549050905090565b60008060008060068054905090506000811115611d315760008190505b6000811115611d0e578560066001830381548110611c8657fe5b906000526020600020015410158015611cdd5750600015156004600060066001850381548110611cb257fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161515145b15611d005760066001820381548110611cf257fe5b906000526020600020015492505b808060019003915050611c6c565b506000821115611d30576001611d2383612598565b8393509350935050611d44565b5b6000806000819150809050935093509350505b9193909250565b600060088281548110611d5a57fe5b90600052602060002001549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015611dd557600080fd5b505afa158015611de9573d6000803e3d6000fd5b505050506040513d6020811015611dff57600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611ecd57600080fd5b505af1158015611ee1573d6000803e3d6000fd5b505050506040513d6020811015611ef757600080fd5b8101908080519060200190929190505050611f1157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b158015611f6c57600080fd5b505af1158015611f80573d6000803e3d6000fd5b50505050505050565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611fe957600080fd5b60001515611ff6836121e6565b15151461200257600080fd5b80600360008481526020019081526020016000208190555060016002600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506006829080600181540180825580915050906001820390600052602060002001600090919290919091505550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c0826040518082815260200191505060405180910390a25050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000806120e6600c54611c4f565b600e6000829550839190505582945050505081156121a957612109600d54611c4f565b600f6000829550839190505582945050505081156121a857600e54600f541115612149576001601060006101000a81548160ff0219169083151502179055505b6001601060016101000a81548160ff0219169083151502179055507fbbdea414ca4370d674fd5e370fbc6d7da2dafff34ec019faaf1c36b1180a314b600e54600f54604051808381526020018281526020019250505060405180910390a15b5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060019054906101000a900460ff1681565b60006002600083815260200190815260200160002060009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461226a57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060078054806020026020016040519081016040528092919081815260200182805480156122fb57602002820191906000526020600020905b8154815260200190600101908083116122e7575b5050505050905090565b6060600880548060200260200160405190810160405280929190818152602001828054801561235357602002820191906000526020600020905b81548152602001906001019080831161233f575b5050505050905090565b600a5481565b601060009054906101000a900460ff1681565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b1580156123f557600080fd5b505afa158015612409573d6000803e3d6000fd5b505050506040513d606081101561241f57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6060600560008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156124b057602002820191906000526020600020905b81548152602001906001019080831161249c575b50505050509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461251657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015612595573d6000803e3d6000fd5b50565b600060036000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e723e3b53484846040518463ffffffff1660e01b815260040180838152602001828152602001925050506000604051808303818588803b15801561263157600080fd5b505af1158015612645573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146126a857600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a7230582095dfff487850c9cfde336bec7bf0b921ff4f0b8f414d803d400a77a9f48a2a800029",
  "deployedBytecode": "0x60806040526004361061023b5760003560e01c806371d8dd191161012e578063ac33a273116100ab578063dc7ebf0e1161006f578063dc7ebf0e14610d1d578063e086e5ec14610dad578063e631def714610dc4578063e723e3b514610e13578063f2fde38b14610e4b5761023b565b8063ac33a27314610b80578063b63f210a14610bec578063b9ce896b14610c58578063bad4d21e14610c83578063d269a83c14610cb25761023b565b806387105801116100f25780638710580114610a3f5780638da5cb5b14610a5657806391bf116f14610aad5780639a64f07014610adc578063a1206d4e14610b2f5761023b565b806371d8dd19146108e8578063752d49a114610937578063775f75df1461097c5780637b8d56e3146109a75780637ccc586e146109ec5761023b565b80633fcad964116101bc57806359abbfe41161018057806359abbfe41461075a5780635bf31d4d146107c65780635f059f3e146107f1578063681012e51461085c57806369949a86146108875761023b565b80633fcad964146104a45780633fff2816146105055780634482e6f3146105f4578063550921d4146106d6578063556f0dc71461072f5761023b565b80632aa0bc1f116102035780632aa0bc1f1461035957806336e9d632146103a857806337ae9e43146103fb5780633c9177cd1461044e5780633f35ff32146104795761023b565b8063062777ff146102405780630f76c1141461029a57806316e72abb146102c55780631714b0c5146102f0578063292b8cce1461032b575b600080fd5b34801561024c57600080fd5b506102796004803603602081101561026357600080fd5b8101908080359060200190929190505050610e9c565b60405180838152602001821515151581526020019250505060405180910390f35b3480156102a657600080fd5b506102af611453565b6040518082815260200191505060405180910390f35b3480156102d157600080fd5b506102da611493565b6040518082815260200191505060405180910390f35b3480156102fc57600080fd5b506103296004803603602081101561031357600080fd5b8101908080359060200190929190505050611499565b005b6103576004803603602081101561034157600080fd5b81019080803590602001909291905050506114c6565b005b34801561036557600080fd5b506103926004803603602081101561037c57600080fd5b81019080803590602001909291905050506115fe565b6040518082815260200191505060405180910390f35b3480156103b457600080fd5b506103e1600480360360208110156103cb57600080fd5b810190808035906020019092919050505061161e565b604051808215151515815260200191505060405180910390f35b34801561040757600080fd5b506104346004803603602081101561041e57600080fd5b810190808035906020019092919050505061163e565b604051808215151515815260200191505060405180910390f35b34801561045a57600080fd5b5061046361165e565b6040518082815260200191505060405180910390f35b34801561048557600080fd5b5061048e611664565b6040518082815260200191505060405180910390f35b3480156104b057600080fd5b506104dd600480360360208110156104c757600080fd5b810190808035906020019092919050505061166a565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561051157600080fd5b506105f26004803603608081101561052857600080fd5b810190808035906020019064010000000081111561054557600080fd5b82018360208201111561055757600080fd5b8035906020019184600183028401116401000000008311171561057957600080fd5b90919293919293908035906020019064010000000081111561059a57600080fd5b8201836020820111156105ac57600080fd5b803590602001918460018302840111640100000000831117156105ce57600080fd5b9091929391929390803590602001909291908035906020019092919050505061173d565b005b6106d46004803603608081101561060a57600080fd5b810190808035906020019064010000000081111561062757600080fd5b82018360208201111561063957600080fd5b8035906020019184600183028401116401000000008311171561065b57600080fd5b90919293919293908035906020019064010000000081111561067c57600080fd5b82018360208201111561068e57600080fd5b803590602001918460018302840111640100000000831117156106b057600080fd5b909192939192939080359060200190929190803590602001909291905050506119d0565b005b3480156106e257600080fd5b50610719600480360360408110156106f957600080fd5b810190808035906020019092919080359060200190929190505050611ad5565b6040518082815260200191505060405180910390f35b34801561073b57600080fd5b50610744611b03565b6040518082815260200191505060405180910390f35b34801561076657600080fd5b5061076f611b09565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107b2578082015181840152602081019050610797565b505050509050019250505060405180910390f35b3480156107d257600080fd5b506107db611b61565b6040518082815260200191505060405180910390f35b3480156107fd57600080fd5b506108346004803603604081101561081457600080fd5b810190808035906020019092919080359060200190929190505050611b67565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b34801561086857600080fd5b50610871611c42565b6040518082815260200191505060405180910390f35b34801561089357600080fd5b506108c0600480360360208110156108aa57600080fd5b8101908080359060200190929190505050611c4f565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b3480156108f457600080fd5b506109216004803603602081101561090b57600080fd5b8101908080359060200190929190505050611d4b565b6040518082815260200191505060405180910390f35b34801561094357600080fd5b5061097a6004803603604081101561095a57600080fd5b810190808035906020019092919080359060200190929190505050611d6c565b005b34801561098857600080fd5b50610991611f89565b6040518082815260200191505060405180910390f35b3480156109b357600080fd5b506109ea600480360360408110156109ca57600080fd5b810190808035906020019092919080359060200190929190505050611f8f565b005b3480156109f857600080fd5b50610a2560048036036020811015610a0f57600080fd5b81019080803590602001909291905050506120ae565b604051808215151515815260200191505060405180910390f35b348015610a4b57600080fd5b50610a546120d8565b005b348015610a6257600080fd5b50610a6b6121ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610ab957600080fd5b50610ac26121d3565b604051808215151515815260200191505060405180910390f35b348015610ae857600080fd5b50610b1560048036036020811015610aff57600080fd5b81019080803590602001909291905050506121e6565b604051808215151515815260200191505060405180910390f35b348015610b3b57600080fd5b50610b7e60048036036020811015610b5257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612210565b005b348015610b8c57600080fd5b50610b956122ad565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bd8578082015181840152602081019050610bbd565b505050509050019250505060405180910390f35b348015610bf857600080fd5b50610c01612305565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610c44578082015181840152602081019050610c29565b505050509050019250505060405180910390f35b348015610c6457600080fd5b50610c6d61235d565b6040518082815260200191505060405180910390f35b348015610c8f57600080fd5b50610c98612363565b604051808215151515815260200191505060405180910390f35b348015610cbe57600080fd5b50610cf560048036036040811015610cd557600080fd5b810190808035906020019092919080359060200190929190505050612376565b6040518084151515158152602001838152602001828152602001935050505060405180910390f35b348015610d2957600080fd5b50610d5660048036036020811015610d4057600080fd5b8101908080359060200190929190505050612451565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d99578082015181840152602081019050610d7e565b505050509050019250505060405180910390f35b348015610db957600080fd5b50610dc26124bc565b005b348015610dd057600080fd5b50610dfd60048036036020811015610de757600080fd5b8101908080359060200190929190505050612598565b6040518082815260200191505060405180910390f35b610e4960048036036040811015610e2957600080fd5b8101908080359060200190929190803590602001909291905050506125b5565b005b348015610e5757600080fd5b50610e9a60048036036020811015610e6e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061264e565b005b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610f0857600080fd5b505afa158015610f1c573d6000803e3d6000fd5b505050506040513d6020811015610f3257600080fd5b8101908080519060200190929190505050905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015610fae57600080fd5b505afa158015610fc2573d6000803e3d6000fd5b505050506040513d6020811015610fd857600080fd5b810190808051906020019092919050505090506000808373ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561106b57600080fd5b505afa15801561107f573d6000803e3d6000fd5b505050506040513d602081101561109557600080fd5b810190808051906020019092919050505090506000600190505b6007805490508111611449576110c58189611b67565b80955081995082985050505085156112f557600060095484816110e457fe5b06840390506000600160056000848152602001908152602001600020805490500160056000848152602001908152602001600020805490506003600085815260200190815260200160002054028a018161113a57fe5b0490508060036000848152602001908152602001600020819055507f11d6fa234e47ea0871bd2e6efeb4e7be326a7216c36990b799a61a501cfcf1c38282604051808381526020018281526020019250505060405180910390a160056000838152602001908152602001600020839080600181540180825580915050906001820390600052602060002001600090919290919091505550600015156002600084815260200190815260200160002060009054906101000a900460ff161515141561129357600682908060018154018082558091505090600182039060005260206000200160009091929091909150555060016002600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c08a6040518082815260200191505060405180910390a26112ee565b600115156004600084815260200190815260200160002060009054906101000a900460ff16151514156112ed5760006004600084815260200190815260200160002060006101000a81548160ff0219169083151502179055505b5b505061143c565b6007805490508573ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561137857600080fd5b505afa15801561138c573d6000803e3d6000fd5b505050506040513d60208110156113a257600080fd5b8101908080519060200190929190505050111561143b578373ffffffffffffffffffffffffffffffffffffffff1663752d49a18260078054905085816113e457fe5b046040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b15801561142257600080fd5b505af1158015611436573d6000803e3d6000fd5b505050505b5b80806001019150506110af565b5050505050915091565b6000806006805490501161146657600080fd5b61148e60066001600680549050038154811061147e57fe5b9060005260206000200154612598565b905090565b600f5481565b60095442816114a457fe5b064203600c819055508060095442816114b957fe5b06420301600d8190555050565b600a543410156114d557600080fd5b6002600082815260200190815260200160002060009054906101000a900460ff166114ff57600080fd5b600b548101600954428161150f57fe5b064203111561151d57600080fd5b60016004600083815260200190815260200160002060006101000a81548160ff02191690831515021790555060088190806001815401808255809150509060018203906000526020600020016000909192909190915055507fb199747b7b98ffd681a09c542f7f62ba4972f6f5b7d791b6f8bba36862cbdd2b33826003600085815260200190815260200160002054604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390a150565b600060056000838152602001908152602001600020805490509050919050565b60026020528060005260406000206000915054906101000a900460ff1681565b60046020528060005260406000206000915054906101000a900460ff1681565b600d5481565b600e5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633fcad964856040518263ffffffff1660e01b81526004018082815260200191505060606040518083038186803b1580156116e157600080fd5b505afa1580156116f5573d6000803e3d6000fd5b505050506040513d606081101561170b57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509193909250565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b1580156117a657600080fd5b505afa1580156117ba573d6000803e3d6000fd5b505050506040513d60208110156117d057600080fd5b8101908080519060200190929190505050905060008211156118ec578073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156118a757600080fd5b505af11580156118bb573d6000803e3d6000fd5b505050506040513d60208110156118d157600080fd5b81019080805190602001909291905050506118eb57600080fd5b5b8073ffffffffffffffffffffffffffffffffffffffff16633fff28168888888888886040518763ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f82011690508083019250505098505050505050505050600060405180830381600087803b1580156119af57600080fd5b505af11580156119c3573d6000803e3d6000fd5b5050505050505050505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634482e6f3348888888888886040518863ffffffff1660e01b81526004018080602001806020018581526020018481526020018381038352898982818152602001925080828437600081840152601f19601f8201169050808301925050508381038252878782818152602001925080828437600081840152601f19601f820116905080830192505050985050505050505050506000604051808303818588803b158015611ab457600080fd5b505af1158015611ac8573d6000803e3d6000fd5b5050505050505050505050565b60056020528160005260406000208181548110611aee57fe5b90600052602060002001600091509150505481565b60095481565b60606006805480602002602001604051908101604052809291908181526020018280548015611b5757602002820191906000526020600020905b815481526020019060010190808311611b43575b5050505050905090565b600b5481565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635f059f3e86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b158015611be657600080fd5b505afa158015611bfa573d6000803e3d6000fd5b505050506040513d6060811015611c1057600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6000600880549050905090565b60008060008060068054905090506000811115611d315760008190505b6000811115611d0e578560066001830381548110611c8657fe5b906000526020600020015410158015611cdd5750600015156004600060066001850381548110611cb257fe5b9060005260206000200154815260200190815260200160002060009054906101000a900460ff161515145b15611d005760066001820381548110611cf257fe5b906000526020600020015492505b808060019003915050611c6c565b506000821115611d30576001611d2383612598565b8393509350935050611d44565b5b6000806000819150809050935093509350505b9193909250565b600060088281548110611d5a57fe5b90600052602060002001549050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a80209736040518163ffffffff1660e01b815260040160206040518083038186803b158015611dd557600080fd5b505afa158015611de9573d6000803e3d6000fd5b505050506040513d6020811015611dff57600080fd5b810190808051906020019092919050505090508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b158015611ecd57600080fd5b505af1158015611ee1573d6000803e3d6000fd5b505050506040513d6020811015611ef757600080fd5b8101908080519060200190929190505050611f1157600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1663752d49a184846040518363ffffffff1660e01b81526004018083815260200182815260200192505050600060405180830381600087803b158015611f6c57600080fd5b505af1158015611f80573d6000803e3d6000fd5b50505050505050565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611fe957600080fd5b60001515611ff6836121e6565b15151461200257600080fd5b80600360008481526020019081526020016000208190555060016002600084815260200190815260200160002060006101000a81548160ff0219169083151502179055506006829080600181540180825580915050906001820390600052602060002001600090919290919091505550817f2afa03c814297ffc234ff967b6f0863d3c358be243103f20217c8d3a4d39f9c0826040518082815260200191505060405180910390a25050565b60006004600083815260200190815260200160002060009054906101000a900460ff169050919050565b6000806120e6600c54611c4f565b600e6000829550839190505582945050505081156121a957612109600d54611c4f565b600f6000829550839190505582945050505081156121a857600e54600f541115612149576001601060006101000a81548160ff0219169083151502179055505b6001601060016101000a81548160ff0219169083151502179055507fbbdea414ca4370d674fd5e370fbc6d7da2dafff34ec019faaf1c36b1180a314b600e54600f54604051808381526020018281526020019250505060405180910390a15b5b5050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b601060019054906101000a900460ff1681565b60006002600083815260200190815260200160002060009054906101000a900460ff169050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461226a57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060078054806020026020016040519081016040528092919081815260200182805480156122fb57602002820191906000526020600020905b8154815260200190600101908083116122e7575b5050505050905090565b6060600880548060200260200160405190810160405280929190818152602001828054801561235357602002820191906000526020600020905b81548152602001906001019080831161233f575b5050505050905090565b600a5481565b601060009054906101000a900460ff1681565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d269a83c86866040518363ffffffff1660e01b8152600401808381526020018281526020019250505060606040518083038186803b1580156123f557600080fd5b505afa158015612409573d6000803e3d6000fd5b505050506040513d606081101561241f57600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050509250925092509250925092565b6060600560008381526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156124b057602002820191906000526020600020905b81548152602001906001019080831161249c575b50505050509050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461251657600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015612595573d6000803e3d6000fd5b50565b600060036000838152602001908152602001600020549050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e723e3b53484846040518463ffffffff1660e01b815260040180838152602001828152602001925050506000604051808303818588803b15801561263157600080fd5b505af1158015612645573d6000803e3d6000fd5b50505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146126a857600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a180600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fea165627a7a7230582095dfff487850c9cfde336bec7bf0b921ff4f0b8f414d803d400a77a9f48a2a800029",
  "sourceMap": "164:2249:19:-;;;1201:230;8:9:-1;5:2;;;30:1;27;20:12;5:2;1201:230:19;;;;;;;;;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1201:230:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;0:373;;1201:230:19;;;;;;;;;;;;;;;;;1343:13;1357:19;1377:14;1393:11;1405:12;2426:13:18;638::21;604:18;;:48;;;;;;;;;;;;;;;;;;668:10;660:5;;:18;;;;;;;;;;;;;;;;;;555:131;2465:19:18;2452:10;:32;;;;2505:14;2489:13;:30;;;;2538:12;2524:11;:26;;;;2568:11;2555:10;:24;;;;;;;;;;;;:::i;:::-;;2286:298;;;;;1201:230:19;;;;;164:2249;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "164:2249:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4512:2554:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4512:2554:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4512:2554:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9165:165;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9165:165:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;287:20:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;287:20:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1606:150;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1606:150:19;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1606:150:19;;;;;;;;;;;;;;;;;:::i;:::-;;3555:607:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3555:607:18;;;;;;;;;;;;;;;;;:::i;:::-;;8651:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8651:138:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8651:138:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;317:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;317:36:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;317:36:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;504:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;504:43:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;504:43:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;234:23:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;234:23:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;261:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;261:22:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;973:189:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;973:189:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;973:189:21;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3098:332;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3098:332:21;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3098:332:21;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3098:332:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3098:332:21;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3098:332:21;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3098:332:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3098:332:21;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3098:332:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3922:227;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3922:227:21;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3922:227:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3922:227:21;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3922:227:21;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3922:227:21;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3922:227:21;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3922:227:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;627:49:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;627:49:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;627:49:18;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1112:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1112:23:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9459:88;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9459:88:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9459:88:18;;;;;;;;;;;;;;;;;1179:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1179:25:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1647:215:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1647:215:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1647:215:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10480:107:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10480:107:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7568:518;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7568:518:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7568:518:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11241:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11241:117:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11241:117:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4315:228:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4315:228:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4315:228:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;205:25:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;205:25:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2813:565:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2813:565:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2813:565:18;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11026:107;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11026:107:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11026:107:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1994:416:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1994:416:19;;;:::i;:::-;;278:28:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;278:28:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;335:25:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;335:25:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8950:98:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8950:98:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8950:98:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5076:167:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5076:167:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5076:167:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;9708:88:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9708:88:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;9708:88:18;;;;;;;;;;;;;;;;;10718:101;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10718:101:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10718:101:18;;;;;;;;;;;;;;;;;1139:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1139:22:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;311:20:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;311:20:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2219:215:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2219:215:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2219:215:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10188:131:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10188:131:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10188:131:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;10188:131:18;;;;;;;;;;;;;;;;;7172:135;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7172:135:18;;;:::i;:::-;;8250:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8250:126:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8250:126:18;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4798:160:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4798:160:21;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5346:204;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5346:204:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5346:204:21;;;;;;;;;;;;;;;;;;;:::i;:::-;;4512:2554:18;4569:11;4582:12;4808:20;4844:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4844:41:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4844:41:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4844:41:18;;;;;;;;;;;;;;;;4808:78;;4891:18;4919;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4919:41:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4919:41:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4919:41:18;;;;;;;;;;;;;;;;4891:70;;4966:24;4995:20;5018:7;:17;;;5044:4;5018:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5018:32:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5018:32:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5018:32:18;;;;;;;;;;;;;;;;4995:55;;5227:6;5236:1;5227:10;;5223:1839;5244:10;:17;;;;5239:1;:22;5223:1839;;5474:39;5500:1;5502:10;5474:25;:39::i;:::-;5435:78;;;;;;;;;;;;5522:7;5519:1538;;;5537:13;5597:11;;5575:19;:33;;;;;;5553:19;:55;5537:71;;5738:14;5872:1;5834:18;:28;5853:8;5834:28;;;;;;;;;;;:35;;;;:39;5794:18;:28;5813:8;5794:28;;;;;;;;;;;:35;;;;5764:17;:27;5782:8;5764:27;;;;;;;;;;;;:65;5755:6;:74;5754:120;;;;;;5738:136;;5972:9;5942:17;:27;5960:8;5942:27;;;;;;;;;;;:39;;;;5993:37;6011:8;6020:9;5993:37;;;;;;;;;;;;;;;;;;;;;;;;6146:18;:28;6165:8;6146:28;;;;;;;;;;;6180:1;6146:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6146:36:18;;;;;;;;;;;;;;;;;;;;;;6487:5;6466:26;;:7;:17;6474:8;6466:17;;;;;;;;;;;;;;;;;;;;;:26;;;6463:245;;;6503:10;6519:8;6503:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6503:25:18;;;;;;;;;;;;;;;;;;;;;;6558:4;6538:7;:17;6546:8;6538:17;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;6589:8;6577:28;6598:6;6577:28;;;;;;;;;;;;;;;;;;6463:245;;;6655:4;6627:32;;:14;:24;6642:8;6627:24;;;;;;;;;;;;;;;;;;;;;:32;;;6624:84;;;6695:5;6668:14;:24;6683:8;6668:24;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;6624:84;6463:245;5519:1538;;;;;6913:10;:17;;;;6878:7;:17;;;6904:4;6878:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6878:32:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6878:32:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6878:32:18;;;;;;;;;;;;;;;;:52;6875:182;;;6992:11;:18;;;7011:1;7032:10;:17;;;;7014:15;:35;;;;;;6992:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6992:58:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6992:58:18;;;;6875:182;5519:1538;5263:3;;;;;;;5223:1839;;;;4512:2554;;;;;;;:::o;9165:165::-;9214:4;9255:1;9235:10;:17;;;;:21;9227:30;;;;;;9269:56;9292:10;9322:1;9303:10;:17;;;;:20;9292:32;;;;;;;;;;;;;;;;9269:22;:56::i;:::-;9262:63;;9165:165;:::o;287:20:19:-;;;;:::o;1606:150::-;1686:11;;1680:3;:17;;;;;;1674:3;:23;1658:13;:39;;;;1742:9;1728:11;;1722:3;:17;;;;;;1716:3;:23;:35;1702:11;:49;;;;1606:150;:::o;3555:607:18:-;3646:10;;3633:9;:23;;3625:32;;;;;;3746:7;:19;3754:10;3746:19;;;;;;;;;;;;;;;;;;;;;3738:28;;;;;;3861:13;;3848:10;:26;3832:11;;3826:3;:17;;;;;;3820:3;:23;:54;;3812:63;;;;;;3977:4;3948:14;:26;3963:10;3948:26;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;4045:19;4070:10;4045:36;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;4045:36:18;;;;;;;;;;;;;;;;;;;;;;4091:66;4105:10;4116;4127:17;:29;4145:10;4127:29;;;;;;;;;;;;4091:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3555:607;:::o;8651:138::-;8729:4;8747:18;:30;8766:10;8747:30;;;;;;;;;;;:37;;;;8740:44;;8651:138;;;:::o;317:36::-;;;;;;;;;;;;;;;;;;;;;;:::o;504:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;234:23:19:-;;;;:::o;261:22::-;;;;:::o;973:189:21:-;1035:15;1052:10;1064:24;1108:18;;;;;;;;;;;:34;;;1143:10;1108:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1108:46:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1108:46:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1108:46:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1101:53;;;;;;973:189;;;;;:::o;3098:332::-;3211:14;3235:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3235:41:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3235:41:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3235:41:21;;;;;;;;;;;;;;;;3211:66;;3292:1;3285:4;:8;3282:84;;;3308:7;:20;;;3329:10;3348:4;3354;3308:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3308:51:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3308:51:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3308:51:21;;;;;;;;;;;;;;;;3300:60;;;;;;3282:84;3370:7;:19;;;3390:8;;3399:7;;3407:12;3420:4;3370:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3370:55:21;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3370:55:21;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3370:55:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3370:55:21;;;;3098:332;;;;;;;:::o;3922:227::-;4052:18;;;;;;;;;;;:39;;;4098:9;4109:8;;4118:7;;4126:12;4139:4;4052:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4052:92:21;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;4052:92:21;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4052:92:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4052:92:21;;;;;3922:227;;;;;;:::o;627:49:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1112:23::-;;;;:::o;9459:88::-;9506:13;9532:10;9525:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9459:88;:::o;1179:25::-;;;;:::o;1647:215:21:-;1736:4;1741;1746:24;1790:18;;;;;;;;;;;:44;;;1835:10;1846;1790:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1790:67:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1790:67:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1790:67:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1783:74;;;;;;1647:215;;;;;:::o;10480:107:18:-;10539:4;10556:19;:26;;;;10549:33;;10480:107;:::o;7568:518::-;7643:4;7648;7654:24;7684:11;7698:10;:17;;;;7684:31;;7732:1;7723:6;:10;7720:334;;;7745:6;7754;7745:15;;7741:177;7765:1;7761;:5;7741:177;;;7801:10;7782;7795:1;7793;:3;7782:15;;;;;;;;;;;;;;;;:29;;:73;;;;;7850:5;7815:40;;:14;:31;7830:10;7843:1;7841;:3;7830:15;;;;;;;;;;;;;;;;7815:31;;;;;;;;;;;;;;;;;;;;;:40;;;7782:73;7779:132;;;7887:10;7900:1;7898;:3;7887:15;;;;;;;;;;;;;;;;7865:37;;7779:132;7767:3;;;;;;;;7741:177;;;;7949:1;7927:19;:23;7924:119;;;7966:4;7971:43;7994:19;7971:22;:43::i;:::-;8015:19;7959:76;;;;;;;;;7924:119;7720:334;8071:5;8077:1;8079;8064:17;;;;;;;;;;;;;7568:518;;;;;;:::o;11241:117::-;11309:4;11326:19;11346:6;11326:27;;;;;;;;;;;;;;;;11319:34;;11241:117;;;:::o;4315:228:21:-;4371:14;4395:18;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4395:41:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4395:41:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4395:41:21;;;;;;;;;;;;;;;;4371:66;;4450:7;:20;;;4471:10;4490:4;4496;4450:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4450:51:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4450:51:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4450:51:21;;;;;;;;;;;;;;;;4442:60;;;;;;4507:7;:14;;;4522:10;4533:4;4507:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4507:31:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4507:31:21;;;;4315:228;;;:::o;205:25:19:-;;;;:::o;2813:565:18:-;2932:5;;;;;;;;;;;2918:19;;:10;:19;;;2910:28;;;;;;3042:5;3016:31;;:22;3027:10;3016;:22::i;:::-;:31;;;3008:40;;;;;;3105:6;3073:17;:29;3091:10;3073:29;;;;;;;;;;;:38;;;;3182:4;3160:7;:19;3168:10;3160:19;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;3235:10;3251;3235:27;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3235:27:18;;;;;;;;;;;;;;;;;;;;;;3353:10;3341:30;3364:6;3341:30;;;;;;;;;;;;;;;;;;2813:565;;:::o;11026:107::-;11085:4;11102:14;:26;11117:10;11102:26;;;;;;;;;;;;;;;;;;;;;11095:33;;11026:107;;;:::o;1994:416:19:-;2034:12;2051:10;2097:43;2126:13;;2097:28;:43::i;:::-;2076:10;;2066:74;;;;;;;;;;;;;;2149:7;2146:260;;;2193:41;2222:11;;2193:28;:41::i;:::-;2174:8;;2164:70;;;;;;;;;;;;;;2244:7;2241:158;;;2274:10;;2263:8;;:21;2260:57;;;2305:4;2294:8;;:15;;;;;;;;;;;;;;;;;;2260:57;2339:4;2323:13;;:20;;;;;;;;;;;;;;;;;;2355:37;2371:10;;2383:8;;2355:37;;;;;;;;;;;;;;;;;;;;;;;;2241:158;2146:260;1994:416;;:::o;278:28:21:-;;;;;;;;;;;;;:::o;335:25:19:-;;;;;;;;;;;;;:::o;8950:98:18:-;9007:4;9024:7;:19;9032:10;9024:19;;;;;;;;;;;;;;;;;;;;;9017:26;;8950:98;;;:::o;5076:167:21:-;5158:5;;;;;;;;;;;5144:19;;:10;:19;;;5136:28;;;;;;5224:13;5190:18;;:48;;;;;;;;;;;;;;;;;;5076:167;:::o;9708:88:18:-;9755:13;9781:10;9774:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9708:88;:::o;10718:101::-;10769:13;10795:19;10788:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10718:101;:::o;1139:22::-;;;;:::o;311:20:19:-;;;;;;;;;;;;;:::o;2219:215:21:-;2298:16;2316:11;2329:24;2372:18;;;;;;;;;;;:34;;;2407:10;2418;2372:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2372:57:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2372:57:21;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2372:57:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:64;;;;;;2219:215;;;;;:::o;10188:131:18:-;10258:13;10284:18;:30;10303:10;10284:30;;;;;;;;;;;10277:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10188:131;;;:::o;7172:135::-;7236:5;;;;;;;;;;;7222:19;;:10;:19;;;7214:28;;;;;;7261:5;;;;;;;;;;;7253:23;;:46;7285:4;7277:21;;;7253:46;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7253:46:18;7172:135::o;8250:126::-;8319:10;8342:17;:29;8360:10;8342:29;;;;;;;;;;;;8335:36;;8250:126;;;:::o;4798:160:21:-;4884:18;;;;;;;;;;;4871:48;;;4926:9;4937:10;4948:4;4871:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4871:82:21;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4871:82:21;;;;;4798:160;;:::o;5346:204::-;5446:5;;;;;;;;;;;5432:19;;:10;:19;;;5424:28;;;;;;5472:38;5493:5;;;;;;;;;;;5500:9;5472:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5533:9;5525:5;;:17;;;;;;;;;;;;;;;;;;5346:204;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport './Optimistic.sol';\r\n/**\r\n* @title Reader\r\n* This contracts is a pretend contract using Tellor that compares two time values\r\n*/\r\ncontract TestContract is Optimistic{\r\n\r\n\tuint public startDateTime;\r\n\tuint public endDateTime;\r\n\tuint public startValue;\r\n\tuint public endValue;\r\n\tbool public longWins;\r\n\tbool public contractEnded;\r\n\tevent ContractSettled(uint _svalue, uint _evalue);\r\n    /**\r\n    * @dev This constructor function is used to pass variables to the optimistic contract's constructor\r\n    * and the function is blank\r\n    * @param _userContract address for UserContract\r\n    * @param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\r\n    * @param _disputePeriod is the time frame a value can be disputed after being imputed\r\n    * @param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r\n    * It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor \r\n    * System be sure to create some.\r\n    * @param _granularity is the amount of decimals desired on the requested value\r\n    */\r\n\tconstructor(address _userContract, uint _disputeFeeRequired, uint _disputePeriod, uint[] memory _requestIds, uint _granularity) \r\n\tOptimistic(_userContract,_disputeFeeRequired,_disputePeriod, _requestIds,_granularity) public {\r\n\t}\r\n\r\n\r\n    /**\r\n    * @dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r\n    * @param _duration in seconds\r\n    */\r\n\tfunction testContract(uint _duration) external {\r\n\t\tstartDateTime = now - now % granularity;\r\n\t\tendDateTime = now - now % granularity + _duration;\r\n\t}\r\n\r\n\r\n\t/**\r\n    * @dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r\n    * and the first undisputed value after the end time of the contract and settleling(payin off) it.\r\n\t*/\r\n\tfunction settleContracts() external{\r\n\t\tbool _didGet;\r\n\t\tuint _time;\r\n\t\t(_didGet, startValue, _time) = getFirstUndisputedValueAfter(startDateTime);\r\n\t\t\tif(_didGet){\r\n\t\t\t\t(_didGet, endValue, _time) = getFirstUndisputedValueAfter(endDateTime);\r\n\t\t\t\tif(_didGet){\r\n\t\t\t\t\tif(endValue > startValue){\r\n\t\t\t\t\t\tlongWins = true;\r\n\t\t\t\t}\r\n\t\t\t\tcontractEnded = true;\r\n\t\t\t\temit ContractSettled(startValue, endValue);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n}",
  "sourcePath": "C:/company/code/open-oracle/contracts/Tellor/userFiles/TestContract.sol",
  "ast": {
    "absolutePath": "/C/company/code/open-oracle/contracts/Tellor/userFiles/TestContract.sol",
    "exportedSymbols": {
      "TestContract": [
        7295
      ]
    },
    "id": 7296,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7175,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:19"
      },
      {
        "absolutePath": "/C/company/code/open-oracle/contracts/Tellor/userFiles/Optimistic.sol",
        "file": "./Optimistic.sol",
        "id": 7176,
        "nodeType": "ImportDirective",
        "scope": 7296,
        "sourceUnit": 7174,
        "src": "27:26:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7177,
              "name": "Optimistic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7173,
              "src": "189:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Optimistic_$7173",
                "typeString": "contract Optimistic"
              }
            },
            "id": 7178,
            "nodeType": "InheritanceSpecifier",
            "src": "189:10:19"
          }
        ],
        "contractDependencies": [
          7173,
          7990
        ],
        "contractKind": "contract",
        "documentation": "@title Reader\r\nThis contracts is a pretend contract using Tellor that compares two time values\r",
        "fullyImplemented": true,
        "id": 7295,
        "linearizedBaseContracts": [
          7295,
          7173,
          7990
        ],
        "name": "TestContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7180,
            "name": "startDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "205:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7179,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "205:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7182,
            "name": "endDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "234:23:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7181,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "234:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7184,
            "name": "startValue",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "261:22:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7183,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "261:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7186,
            "name": "endValue",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "287:20:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7185,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "287:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7188,
            "name": "longWins",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "311:20:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7187,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "311:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7190,
            "name": "contractEnded",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "335:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7189,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "335:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7196,
            "name": "ContractSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7192,
                  "indexed": false,
                  "name": "_svalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 7196,
                  "src": "386:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7191,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7194,
                  "indexed": false,
                  "name": "_evalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 7196,
                  "src": "400:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7193,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "385:28:19"
            },
            "src": "364:50:19"
          },
          {
            "body": {
              "id": 7217,
              "nodeType": "Block",
              "src": "1426:5:19",
              "statements": []
            },
            "documentation": "@dev This constructor function is used to pass variables to the optimistic contract's constructor\r\nand the function is blank\r\n@param _userContract address for UserContract\r\n@param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\r\n@param _disputePeriod is the time frame a value can be disputed after being imputed\r\n@param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r\nIt is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor \r\nSystem be sure to create some.\r\n@param _granularity is the amount of decimals desired on the requested value\r",
            "id": 7218,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7210,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7198,
                    "src": "1343:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7211,
                    "name": "_disputeFeeRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7200,
                    "src": "1357:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7212,
                    "name": "_disputePeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7202,
                    "src": "1377:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7213,
                    "name": "_requestIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7205,
                    "src": "1393:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7214,
                    "name": "_granularity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7207,
                    "src": "1405:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 7215,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7209,
                  "name": "Optimistic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7173,
                  "src": "1332:10:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Optimistic_$7173_$",
                    "typeString": "type(contract Optimistic)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1332:86:19"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7198,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "1213:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7200,
                  "name": "_disputeFeeRequired",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "1236:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7199,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7202,
                  "name": "_disputePeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "1262:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7201,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7205,
                  "name": "_requestIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "1283:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7203,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1283:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7204,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1283:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7207,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "1310:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7206,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1212:116:19"
            },
            "returnParameters": {
              "id": 7216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1426:0:19"
            },
            "scope": 7295,
            "src": "1201:230:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7241,
              "nodeType": "Block",
              "src": "1653:103:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7223,
                      "name": "startDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7180,
                      "src": "1658:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 7224,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8007,
                        "src": "1674:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7225,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8007,
                          "src": "1680:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7226,
                          "name": "granularity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6615,
                          "src": "1686:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1680:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1674:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1658:39:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7230,
                  "nodeType": "ExpressionStatement",
                  "src": "1658:39:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7231,
                      "name": "endDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7182,
                      "src": "1702:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7232,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8007,
                          "src": "1716:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 7235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 7233,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8007,
                            "src": "1722:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 7234,
                            "name": "granularity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6615,
                            "src": "1728:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1722:17:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1716:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 7237,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7220,
                        "src": "1742:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1716:35:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1702:49:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7240,
                  "nodeType": "ExpressionStatement",
                  "src": "1702:49:19"
                }
              ]
            },
            "documentation": "@dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r\n@param _duration in seconds\r",
            "id": 7242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7220,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 7242,
                  "src": "1628:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7219,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1627:16:19"
            },
            "returnParameters": {
              "id": 7222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1653:0:19"
            },
            "scope": 7295,
            "src": "1606:150:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7293,
              "nodeType": "Block",
              "src": "2029:381:19",
              "statements": [
                {
                  "assignments": [
                    7246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7246,
                      "name": "_didGet",
                      "nodeType": "VariableDeclaration",
                      "scope": 7293,
                      "src": "2034:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7245,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2034:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7247,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2034:12:19"
                },
                {
                  "assignments": [
                    7249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7249,
                      "name": "_time",
                      "nodeType": "VariableDeclaration",
                      "scope": 7293,
                      "src": "2051:10:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7248,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2051:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7250,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2051:10:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 7251,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7246,
                          "src": "2067:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7252,
                          "name": "startValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7184,
                          "src": "2076:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7253,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7249,
                          "src": "2088:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 7254,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2066:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7256,
                          "name": "startDateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7180,
                          "src": "2126:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 7255,
                        "name": "getFirstUndisputedValueAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7040,
                        "src": "2097:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 7257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2097:43:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "2066:74:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7259,
                  "nodeType": "ExpressionStatement",
                  "src": "2066:74:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 7260,
                    "name": "_didGet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7246,
                    "src": "2149:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7292,
                  "nodeType": "IfStatement",
                  "src": "2146:260:19",
                  "trueBody": {
                    "id": 7291,
                    "nodeType": "Block",
                    "src": "2157:249:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 7261,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7246,
                                "src": "2165:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 7262,
                                "name": "endValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7186,
                                "src": "2174:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 7263,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7249,
                                "src": "2184:5:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 7264,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2164:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 7266,
                                "name": "endDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7182,
                                "src": "2222:11:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 7265,
                              "name": "getFirstUndisputedValueAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7040,
                              "src": "2193:28:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                              }
                            },
                            "id": 7267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2193:41:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "src": "2164:70:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7269,
                        "nodeType": "ExpressionStatement",
                        "src": "2164:70:19"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 7270,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7246,
                          "src": "2244:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 7290,
                        "nodeType": "IfStatement",
                        "src": "2241:158:19",
                        "trueBody": {
                          "id": 7289,
                          "nodeType": "Block",
                          "src": "2252:147:19",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 7271,
                                  "name": "endValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7186,
                                  "src": "2263:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 7272,
                                  "name": "startValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7184,
                                  "src": "2274:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2263:21:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 7279,
                              "nodeType": "IfStatement",
                              "src": "2260:57:19",
                              "trueBody": {
                                "id": 7278,
                                "nodeType": "Block",
                                "src": "2285:32:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 7276,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 7274,
                                        "name": "longWins",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7188,
                                        "src": "2294:8:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 7275,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2305:4:19",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2294:15:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7277,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2294:15:19"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 7282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 7280,
                                  "name": "contractEnded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7190,
                                  "src": "2323:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 7281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2339:4:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2323:20:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 7283,
                              "nodeType": "ExpressionStatement",
                              "src": "2323:20:19"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7285,
                                    "name": "startValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7184,
                                    "src": "2371:10:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7286,
                                    "name": "endValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7186,
                                    "src": "2383:8:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 7284,
                                  "name": "ContractSettled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7196,
                                  "src": "2355:15:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 7287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2355:37:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 7288,
                              "nodeType": "EmitStatement",
                              "src": "2350:42:19"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r\nand the first undisputed value after the end time of the contract and settleling(payin off) it.\r",
            "id": 7294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2018:2:19"
            },
            "returnParameters": {
              "id": 7244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2029:0:19"
            },
            "scope": 7295,
            "src": "1994:416:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7296,
        "src": "164:2249:19"
      }
    ],
    "src": "0:2413:19"
  },
  "legacyAST": {
    "absolutePath": "/C/company/code/open-oracle/contracts/Tellor/userFiles/TestContract.sol",
    "exportedSymbols": {
      "TestContract": [
        7295
      ]
    },
    "id": 7296,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7175,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:19"
      },
      {
        "absolutePath": "/C/company/code/open-oracle/contracts/Tellor/userFiles/Optimistic.sol",
        "file": "./Optimistic.sol",
        "id": 7176,
        "nodeType": "ImportDirective",
        "scope": 7296,
        "sourceUnit": 7174,
        "src": "27:26:19",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7177,
              "name": "Optimistic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7173,
              "src": "189:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Optimistic_$7173",
                "typeString": "contract Optimistic"
              }
            },
            "id": 7178,
            "nodeType": "InheritanceSpecifier",
            "src": "189:10:19"
          }
        ],
        "contractDependencies": [
          7173,
          7990
        ],
        "contractKind": "contract",
        "documentation": "@title Reader\r\nThis contracts is a pretend contract using Tellor that compares two time values\r",
        "fullyImplemented": true,
        "id": 7295,
        "linearizedBaseContracts": [
          7295,
          7173,
          7990
        ],
        "name": "TestContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7180,
            "name": "startDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "205:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7179,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "205:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7182,
            "name": "endDateTime",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "234:23:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7181,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "234:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7184,
            "name": "startValue",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "261:22:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7183,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "261:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7186,
            "name": "endValue",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "287:20:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7185,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "287:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7188,
            "name": "longWins",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "311:20:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7187,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "311:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7190,
            "name": "contractEnded",
            "nodeType": "VariableDeclaration",
            "scope": 7295,
            "src": "335:25:19",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 7189,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "335:4:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7196,
            "name": "ContractSettled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7192,
                  "indexed": false,
                  "name": "_svalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 7196,
                  "src": "386:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7191,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7194,
                  "indexed": false,
                  "name": "_evalue",
                  "nodeType": "VariableDeclaration",
                  "scope": 7196,
                  "src": "400:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7193,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "385:28:19"
            },
            "src": "364:50:19"
          },
          {
            "body": {
              "id": 7217,
              "nodeType": "Block",
              "src": "1426:5:19",
              "statements": []
            },
            "documentation": "@dev This constructor function is used to pass variables to the optimistic contract's constructor\r\nand the function is blank\r\n@param _userContract address for UserContract\r\n@param _disputeFeeRequired the fee to dispute the optimistic price(price sumbitted by known trusted party)\r\n@param _disputePeriod is the time frame a value can be disputed after being imputed\r\n@param _requestIds are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r\nIt is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor \r\nSystem be sure to create some.\r\n@param _granularity is the amount of decimals desired on the requested value\r",
            "id": 7218,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7210,
                    "name": "_userContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7198,
                    "src": "1343:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7211,
                    "name": "_disputeFeeRequired",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7200,
                    "src": "1357:19:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7212,
                    "name": "_disputePeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7202,
                    "src": "1377:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7213,
                    "name": "_requestIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7205,
                    "src": "1393:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7214,
                    "name": "_granularity",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7207,
                    "src": "1405:12:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 7215,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7209,
                  "name": "Optimistic",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7173,
                  "src": "1332:10:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Optimistic_$7173_$",
                    "typeString": "type(contract Optimistic)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1332:86:19"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7198,
                  "name": "_userContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "1213:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7200,
                  "name": "_disputeFeeRequired",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "1236:24:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7199,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7202,
                  "name": "_disputePeriod",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "1262:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7201,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7205,
                  "name": "_requestIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "1283:25:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7203,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1283:4:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7204,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1283:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7207,
                  "name": "_granularity",
                  "nodeType": "VariableDeclaration",
                  "scope": 7218,
                  "src": "1310:17:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7206,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1212:116:19"
            },
            "returnParameters": {
              "id": 7216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1426:0:19"
            },
            "scope": 7295,
            "src": "1201:230:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7241,
              "nodeType": "Block",
              "src": "1653:103:19",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7223,
                      "name": "startDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7180,
                      "src": "1658:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 7224,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8007,
                        "src": "1674:3:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7225,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8007,
                          "src": "1680:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "%",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 7226,
                          "name": "granularity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6615,
                          "src": "1686:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1680:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1674:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1658:39:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7230,
                  "nodeType": "ExpressionStatement",
                  "src": "1658:39:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7231,
                      "name": "endDateTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7182,
                      "src": "1702:11:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 7238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7232,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8007,
                          "src": "1716:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 7235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 7233,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8007,
                            "src": "1722:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 7234,
                            "name": "granularity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6615,
                            "src": "1728:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1722:17:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1716:23:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 7237,
                        "name": "_duration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7220,
                        "src": "1742:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1716:35:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1702:49:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7240,
                  "nodeType": "ExpressionStatement",
                  "src": "1702:49:19"
                }
              ]
            },
            "documentation": "@dev creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r\n@param _duration in seconds\r",
            "id": 7242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7220,
                  "name": "_duration",
                  "nodeType": "VariableDeclaration",
                  "scope": 7242,
                  "src": "1628:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7219,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1628:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1627:16:19"
            },
            "returnParameters": {
              "id": 7222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1653:0:19"
            },
            "scope": 7295,
            "src": "1606:150:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7293,
              "nodeType": "Block",
              "src": "2029:381:19",
              "statements": [
                {
                  "assignments": [
                    7246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7246,
                      "name": "_didGet",
                      "nodeType": "VariableDeclaration",
                      "scope": 7293,
                      "src": "2034:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7245,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2034:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7247,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2034:12:19"
                },
                {
                  "assignments": [
                    7249
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7249,
                      "name": "_time",
                      "nodeType": "VariableDeclaration",
                      "scope": 7293,
                      "src": "2051:10:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 7248,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2051:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7250,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2051:10:19"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 7251,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7246,
                          "src": "2067:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7252,
                          "name": "startValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7184,
                          "src": "2076:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7253,
                          "name": "_time",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7249,
                          "src": "2088:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 7254,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2066:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7256,
                          "name": "startDateTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7180,
                          "src": "2126:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 7255,
                        "name": "getFirstUndisputedValueAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7040,
                        "src": "2097:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                          "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                        }
                      },
                      "id": 7257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2097:43:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256,uint256)"
                      }
                    },
                    "src": "2066:74:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7259,
                  "nodeType": "ExpressionStatement",
                  "src": "2066:74:19"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 7260,
                    "name": "_didGet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7246,
                    "src": "2149:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 7292,
                  "nodeType": "IfStatement",
                  "src": "2146:260:19",
                  "trueBody": {
                    "id": 7291,
                    "nodeType": "Block",
                    "src": "2157:249:19",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "id": 7261,
                                "name": "_didGet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7246,
                                "src": "2165:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 7262,
                                "name": "endValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7186,
                                "src": "2174:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 7263,
                                "name": "_time",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7249,
                                "src": "2184:5:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 7264,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "2164:26:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 7266,
                                "name": "endDateTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7182,
                                "src": "2222:11:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 7265,
                              "name": "getFirstUndisputedValueAfter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7040,
                              "src": "2193:28:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$_t_uint256_$_t_uint256_$",
                                "typeString": "function (uint256) view returns (bool,uint256,uint256)"
                              }
                            },
                            "id": 7267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2193:41:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
                              "typeString": "tuple(bool,uint256,uint256)"
                            }
                          },
                          "src": "2164:70:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 7269,
                        "nodeType": "ExpressionStatement",
                        "src": "2164:70:19"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 7270,
                          "name": "_didGet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7246,
                          "src": "2244:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 7290,
                        "nodeType": "IfStatement",
                        "src": "2241:158:19",
                        "trueBody": {
                          "id": 7289,
                          "nodeType": "Block",
                          "src": "2252:147:19",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 7273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 7271,
                                  "name": "endValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7186,
                                  "src": "2263:8:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 7272,
                                  "name": "startValue",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7184,
                                  "src": "2274:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2263:21:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 7279,
                              "nodeType": "IfStatement",
                              "src": "2260:57:19",
                              "trueBody": {
                                "id": 7278,
                                "nodeType": "Block",
                                "src": "2285:32:19",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 7276,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 7274,
                                        "name": "longWins",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7188,
                                        "src": "2294:8:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 7275,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2305:4:19",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "2294:15:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 7277,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2294:15:19"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 7282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 7280,
                                  "name": "contractEnded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7190,
                                  "src": "2323:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 7281,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2339:4:19",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2323:20:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 7283,
                              "nodeType": "ExpressionStatement",
                              "src": "2323:20:19"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 7285,
                                    "name": "startValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7184,
                                    "src": "2371:10:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 7286,
                                    "name": "endValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 7186,
                                    "src": "2383:8:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 7284,
                                  "name": "ContractSettled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7196,
                                  "src": "2355:15:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 7287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2355:37:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 7288,
                              "nodeType": "EmitStatement",
                              "src": "2350:42:19"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r\nand the first undisputed value after the end time of the contract and settleling(payin off) it.\r",
            "id": 7294,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleContracts",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2018:2:19"
            },
            "returnParameters": {
              "id": 7244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2029:0:19"
            },
            "scope": 7295,
            "src": "1994:416:19",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 7296,
        "src": "164:2249:19"
      }
    ],
    "src": "0:2413:19"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-01T15:13:43.481Z",
  "devdoc": {
    "methods": {
      "addTip(uint256,uint256)": {
        "details": "Allows the user to tip miners for the specified request using Tributes\r",
        "params": {
          "_requestId": "to tip\r",
          "_tip": "amount\r"
        }
      },
      "addTipWithEther(uint256,uint256)": {
        "details": "Allows user to add tip with Ether by sending the ETH to the userContract and exchanging it for Tributes\r at the price specified by the userContract owner.\r",
        "params": {
          "_requestId": "to tip\r",
          "_tip": "amount\r"
        }
      },
      "constructor": {
        "details": "This constructor function is used to pass variables to the optimistic contract's constructor\r and the function is blank\r",
        "params": {
          "_disputeFeeRequired": "the fee to dispute the optimistic price(price sumbitted by known trusted party)\r",
          "_disputePeriod": "is the time frame a value can be disputed after being imputed\r",
          "_granularity": "is the amount of decimals desired on the requested value\r",
          "_requestIds": "are the requests Id's on the Tellor System corresponding to the data types used on this contract.\r It is recommended to use several requestId's that pull from several API's. If requestsId's don't exist in the Tellor \r System be sure to create some.\r",
          "_userContract": "address for UserContract\r"
        }
      },
      "disputeOptimisticValue(uint256)": {
        "details": "allows user to initiate dispute on the value of the specified timestamp\r",
        "params": {
          "_timestamp": "is the timestamp for the value to be disputed\r"
        }
      },
      "getAnyDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first value for the requestId after the specified timestamp\r",
        "params": {
          "_requestId": "is the requestId to look up the value for\r",
          "_timestamp": "after which to search for first verified value\r"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp\r"
      },
      "getCurrentValue()": {
        "details": "Getter function for latest value available\r",
        "return": "latest value available\r"
      },
      "getCurrentValue(uint256)": {
        "details": "Allows the user to get the latest value for the requestId specified\r",
        "params": {
          "_requestId": "is the requestId to look up the value for\r"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp\r"
      },
      "getDisputedValueByIndex(uint256)": {
        "details": "Getter function for the dispute value by index\r",
        "return": "the value\r"
      },
      "getDisputedValues()": {
        "details": "Getter function for all disputed values\r",
        "return": "the array with all values under dispute\r"
      },
      "getFirstUndisputedValueAfter(uint256)": {
        "details": "Get the first undisputed value after the timestamp specified. This function is used within the getTellorValues\r but can be used on its own. \r",
        "params": {
          "_timestamp": "to search the first undisputed value there after\r"
        }
      },
      "getFirstVerifiedDataAfter(uint256,uint256)": {
        "details": "Allows the user to get the first verified value for the requestId after the specified timestamp\r",
        "params": {
          "_requestId": "is the requestId to look up the value for\r",
          "_timestamp": "after which to search for first verified value\r"
        },
        "return": "bool true if it is able to retreive a value, the value, and the value's timestamp, the timestamp after\r which it searched for the first verified value\r"
      },
      "getIsValue(uint256)": {
        "details": "Checks to if a value exists for the specifived timestamp\r",
        "params": {
          "_timestamp": "to verify\r"
        },
        "return": "ture if it exists\r"
      },
      "getMyValuesByTimestamp(uint256)": {
        "details": "Getter function for the value based on the timestamp specified\r",
        "params": {
          "_timestamp": "to retreive value from\r"
        }
      },
      "getNumberOfDisputedValues()": {
        "details": "Getter function for the number of disputed values \r",
        "return": "uint count of number of values for the spedified timestamp\r"
      },
      "getNumberOfValuesPerTimestamp(uint256)": {
        "details": "Getter function for the number of RequestIds associated with a timestamp, based on the timestamp specified\r",
        "params": {
          "_timestamp": "to retreive number of requestIds\r"
        },
        "return": "uint count of number of values for the spedified timestamp\r"
      },
      "getRequestIds()": {
        "details": "Getter function for the requests Ids' from Tellor associated with this price feed\r",
        "return": "uint array of requests Ids'\r"
      },
      "getRequestIdsIncluded(uint256)": {
        "details": "Getter function for the requests Ids' from Tellor associated with this price feed\r at the specified timestamp. This only gets populated after a dispute is initiated and the \r function getTellorValues is ran.\r",
        "params": {
          "_timestamp": "to retreive the requestIds\r"
        },
        "return": "uint array of requests Ids' included in the calcluation of the value\r"
      },
      "getTellorValues(uint256)": {
        "details": "This function gets the Tellor requestIds values for the disputed timestamp. It averages the values on the \r requestsIds and replaces the value set by the contract owner, centralized party.\r",
        "params": {
          "_timestamp": "to get Tellor data from\r"
        },
        "return": "uint of new value and true if it was able to get Tellor data\r"
      },
      "getTimestamps()": {
        "details": "Getter function for the timestamps available\r",
        "return": "uint array of timestamps available\r"
      },
      "isDisputed(uint256)": {
        "details": "This checks if the value for the specified timestamp is under dispute \r",
        "params": {
          "_timestamp": "to check if it is under dispute\r"
        },
        "return": "true if it is under dispute\r"
      },
      "requestData(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using Tributes\r Allowing this prevents us from increasing spread too high (since if we set the price too hight\r users will just go to an exchange and get tokens from there)\r",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value\r",
          "_request": "string API being requested to be mined\r",
          "_symbol": "is the short string symbol for the api request\r",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners\r mine the onDeckQueryHash, or the api with the highest payout pool\r"
        }
      },
      "requestDataWithEther(string,string,uint256,uint256)": {
        "details": "Allows the user to submit a request for data to the oracle using ETH\r",
        "params": {
          "_granularity": "is the number of decimals miners should include on the submitted value\r",
          "_request": "string API being requested to be mined\r",
          "_symbol": "is the short string symbol for the api request\r",
          "_tip": "amount the requester is willing to pay to be get on queue. Miners\r mine the onDeckQueryHash, or the api with the highest payout pool\r"
        }
      },
      "setUserContract(address)": {
        "details": "allows owner to set the user contract address\r",
        "params": {
          "_userContract": "address\r"
        }
      },
      "setValue(uint256,uint256)": {
        "details": "allows contract owner, a centralized party to enter value\r",
        "params": {
          "_timestamp": "is the timestamp for the value\r",
          "_value": "is the value for the timestamp specified\r"
        }
      },
      "settleContracts()": {
        "details": "testing fucntion that settles the contract by getting the first undisputed value after the startDateTime\r and the first undisputed value after the end time of the contract and settleling(payin off) it.\r"
      },
      "testContract(uint256)": {
        "details": "creates a start(now) and end time(now + duration specified) for testing a contract start and end period\r",
        "params": {
          "_duration": "in seconds\r"
        }
      },
      "transferOwnership(address)": {
        "details": "allows owner to transfer ownership\r",
        "params": {
          "_newOwner": "address\r"
        }
      },
      "withdrawETH()": {
        "details": "Allows the contract owner(Tellor) to withdraw ETH from this contract\r"
      }
    },
    "title": "Reader\r This contracts is a pretend contract using Tellor that compares two time values\r"
  },
  "userdoc": {
    "methods": {}
  }
}